{"meta":{"title":"Ender's Blog","subtitle":"Pushing to the limit","description":"the personal blog of Ender","author":"Ender","url":"http://code004accepted.github.io","root":"/"},"pages":[{"title":"关于","date":"2021-02-14T03:56:40.159Z","updated":"2021-02-14T03:56:40.159Z","comments":true,"path":"about/index.html","permalink":"http://code004accepted.github.io/about/index.html","excerpt":"","text":"关于页待完成"},{"title":"Categories","date":"2021-02-14T03:56:40.159Z","updated":"2021-02-14T03:56:40.159Z","comments":false,"path":"categories/index.html","permalink":"http://code004accepted.github.io/categories/index.html","excerpt":"","text":""},{"title":"关于版权","date":"2021-02-14T03:56:40.159Z","updated":"2021-02-14T03:56:40.159Z","comments":false,"path":"copyright/index.html","permalink":"http://code004accepted.github.io/copyright/index.html","excerpt":"","text":"本站允许"},{"title":"Friends","date":"2021-02-14T03:56:40.159Z","updated":"2021-02-14T03:56:40.159Z","comments":false,"path":"friends/index.html","permalink":"http://code004accepted.github.io/friends/index.html","excerpt":"这里写友链上方的内容。","text":"这里写友链上方的内容。 这里可以写友链页面下方的文字备注，例如自己的友链规范、示例等。"},{"title":"留言区","date":"2021-02-14T03:56:40.159Z","updated":"2021-02-14T03:56:40.159Z","comments":true,"path":"msg/index.html","permalink":"http://code004accepted.github.io/msg/index.html","excerpt":"","text":"此留言区可用于： 🗣和博主进行技术（或适当不涉及技术）的讨论（如果是与特定文章相关的讨论，请在相应文章评论区进行） 🌊灌水 🧪测试评论系统 🙋‍♂️举报违规评论（请附上被举报评论所在文章的链接） 🔗申请友链 🚀其他不违反中国大陆法律的内容 请留言者注意，您对由您发布的一切内容承担所有责任，包括但不仅限于法律层面及道德层面的责任。 对于用户发布的内容，本站没有责任或义务确保其准确性、安全性，也不承担任何形式、任何层面的责任。 反垃圾系统仅为防止无意义内容或大量刷屏导致服务器过载或用户浏览体验受到影响而设置，并不会自动拦截违法违规内容及不真实的内容（虽然此类内容有可能因为用户举报而被删除或手动屏蔽）。"},{"title":"Routes & Services","date":"2021-02-14T03:56:40.159Z","updated":"2021-02-14T03:56:40.159Z","comments":false,"path":"routes/index.html","permalink":"http://code004accepted.github.io/routes/index.html","excerpt":"","text":"Routes &amp; Services临时说明在本博客配置完成后，博主将购置新域名并弃用code004.cf免费域名（会设置自动跳转） 目前，www.code004.cf和blog.code004.cf将会被引导至旧博客的线路切换页面 code004.cf会直接进入新博客 而旧博客的首页可在old.code004.cf访问 给您带来不便，敬请谅解。如有疑问，欢迎邮件询问code004@qq.com或在本站任意文章评论区留言。谢谢。 Actively UpdatingHexo-Volantis BlogGithub Line 尚未部署： Coding Line 尚未部署： Gitee Line GoIndex采用GoIndex实现共享Google Drive中的内容 暂时采用免费域名：https://pan.code004.cf （备用：https://drive.code004.cf/ ），等这个blog进一步完善后会购置域名 Service Statushttps://status.code004.cf/ 等blog进一步完善后会购置域名 ArchivedHexo-Fluid BlogCoding Line （亦可通过域名 https://old.code004.cf 访问） 最后更新日期：2020/07/25 界面保留至：预计无限期 Hexo-NexT BlogCoding Line 最后更新日期：2020/05/07 界面保留至：预计无限期 附注：此blog亦可从GitHub Line访问，但已知存在页面无法正常渲染、文章打开404的🐞 （某大佬：那这个GitHub Line有什么存在的价值呢？删了算了吧） Hexo-Materialized BlogLink: https://theme-materialized.github.io/ 最后更新日期：2019/08/27 界面保留至：预计无限期 说明：该博客主要用于作为我开发的主题theme-Materialized的demo，因此没怎么更新过 其实只更新过两三次"},{"title":"Tags","date":"2021-02-14T03:56:40.159Z","updated":"2021-02-14T03:56:40.159Z","comments":false,"path":"tags/index.html","permalink":"http://code004accepted.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"going-viral","date":"2021-02-14T03:56:40.095Z","updated":"2021-02-14T03:56:40.095Z","comments":true,"path":"2021/going-viral/","link":"","permalink":"http://code004accepted.github.io/2021/going-viral/","excerpt":"","text":"title: 如何快速在中国互联网","categories":[],"tags":[]},{"title":"暂时的告别，是为了更好的开始","slug":"temporary-farewell-for-a-better-start","date":"2020-04-03T18:46:33.000Z","updated":"2021-02-14T03:56:40.155Z","comments":true,"path":"2020/temporary-farewell-for-a-better-start/","link":"","permalink":"http://code004accepted.github.io/2020/temporary-farewell-for-a-better-start/","excerpt":"","text":"暂时的告别，是为了更好的开始 GC Server Legacy（即现有版本）将会于（预计）4月12日发布最后一个版本 开发组会对项目进行彻底重构并加入大量新功能，GC Server Renewed 预计将于2020年9月1日发布 永别了，GC Server (Legacy)！","categories":[{"name":"项目","slug":"项目","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/"}],"tags":[{"name":"纪念","slug":"纪念","permalink":"http://code004accepted.github.io/tags/%E7%BA%AA%E5%BF%B5/"},{"name":"开发工作","slug":"开发工作","permalink":"http://code004accepted.github.io/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E4%BD%9C/"},{"name":"GC Server","slug":"GC-Server","permalink":"http://code004accepted.github.io/tags/GC-Server/"}]},{"title":"对一个Pull Request的回复","slug":"reply-to-a-pr","date":"2020-02-20T06:49:31.000Z","updated":"2021-02-14T03:56:40.119Z","comments":true,"path":"2020/reply-to-a-pr/","link":"","permalink":"http://code004accepted.github.io/2020/reply-to-a-pr/","excerpt":"近几天不知道为什么一直感觉情绪比较失调，昨天看到这个去年八月份去插了一句嘴的PR，气愤感油然而生。由于Repo Owner好像已经锁帖，故在此回复： PR链接：https://github.com/getlantern/lantern/pull/8347 回复对象：@han814992037","text":"近几天不知道为什么一直感觉情绪比较失调，昨天看到这个去年八月份去插了一句嘴的PR，气愤感油然而生。由于Repo Owner好像已经锁帖，故在此回复： PR链接：https://github.com/getlantern/lantern/pull/8347 回复对象：@han814992037 首先，这位仁兄和其他几位一起在Issues里面骂人，随后开发者关闭了Issues，然后我找Lantern的错误时发现他们又在PR里面at开发者来骂。 好吧，说老实话，我TM就不应该进这个PR。我进来就回了一句话（因为他骂人是用f*ck来的，我一开始以为他不是中国人）： 12Excuse me, dear sirs/madams,Issues is not for you to say such bad words. （好吧我写错了是PR） 随后… 1234567FUCK your mom!!!money-back!!!!!!!!FUCK your mom!!!money-back!!!!!!!!FUCK your mom!!!money-back!!!!!!!!FUCK your mom!!!money-back!!!!!!!!FUCK your mom!!!money-back!!!!!!!! 好的，我能理解你的心情，Lantern付钱然后连不上并不是一个typical的问题，因为就我所知，VxN付款后连不上的不计其数。就好比拿你的电脑去连接一个一直在变的服务器，你的网络的变化和蓝灯服务的变化还有zf因素都可能导致效果的180°大转变。况且，你F*CK找我干什么，找开发者啊… 于是我继续回复： 12345678Dear sir, I sincerely understand your anger.I also know that Lantern is somehow cheating people&#x27;s money.But please note that Github Issues isn&#x27;t a place for you to express your feelings through bad words.If you really want to say bad words, please send emails or private messages to the developers.Thanks for giving me a chance to speak. Hope no more bad words will appear here.PS: Would you mind learning some Markdown skills before fucking me???Go here to read more （好吧我又把PR写成了Issues…） 然后另外一个人又跳出来： 1我们作为顾客，给了你信任，反应了问题，但是你们呢？有任何反馈吗？我也是开发者，我自己的顾客有问题的时候，也会第一时间反馈，但是你们长时间累计的不反馈，不理会你认为大家发火不合理？我是英文烂，但是又怎样呢？顾客需要练好自己的英文才能反馈？我用英文跟你沟通还不是因为以为你是英文开发者？所以我为你的“方便”，你却没有看到问题本身，我们需要的是连接正常稳定的VPN，跟你骂有意义？ 好的，我再重申一下，我TM真的不是开发者… 遂回复： 12345678910111213首先重申一下，我与这个项目没有任何关系。我不是他们的开发者，也不是顾客。我只是今天晚上浏览VPN的时候看到了而已说实话，作为一个GA开发者，我认为您的语言有些不合理。您的顾客？我只知道我的所有项目全部是免费的，其中大部分还是开源的；VPN不是说好就能好的，它不像一个游戏或者一个工具程序，不是说有Bug就能修的。甚至有可能你这里不行，他那里可以。在这种情况下，根据开发者自愿遵守的相关规定，他完全可以无视你的Issue与PR我认为Latern的开发者也不至于那么猥琐。至少，他们完全可以把这个PR给删掉或者关闭PR板块。他们没有这么做，说明他们并没有那么坏。您们可以发火，您们可以骂人，但请不要玷污了Github。这是一个开发者讨论交流的社区，不是一个开发者和顾客到处骂来骂去的社区。您认为您用英文与我沟通是为了我的”方便“，我可以说我开始的时候和您沟通是为了广大Github用户的”方便“，而且我现在用中文与您共同也是为了您的”方便“，很明显在你代码打多了的时候，英文比中文输的更快。关于您的”顾客需要练好英语才能反馈“观点我表示极不赞同。我的几个项目支持所有语言反馈，我还有一次收到一份日语的BUG报告，我还不是丢到Google Translate里面看，然后再回信，翻译成日语，发给他您如果需要正常稳定的VPN，只能说您智商（或者搜索技能）不过关。很明显Lantern比赛风差得多，一直以来都是如此（至少我用的一直是如此，当然我并没有购买PRO），还有FreeVPN，一直以来Google Youtube Twitter从来没卡过，也是1s连上，永久免费。顺便问一句，您平常开发使用的是哪种语言？我不太相信有英语不好能编好代码的语言以上，我不是对您不尊重，而是您需要更好地弄清楚我和这个项目没有关系。还有，您的措辞真的让我觉得开发者，或者说，程序员这个称谓收到了玷污。 然后前面那个人又出来了： 123456789101112131415161718191.你是干啥的和我俩没有半毛钱关系，你是联合国秘书长，都与我无关！你要不来这里放屁，我不屑于和你这种傻屌浪费时间。2.我们信任，是因为已经用过一年了，人家有官方网站(发表意见，都不事先考察一下吗？！)3.我们是花钱买的服务，你和我们扯自己破解？什么狗屁逻辑（你这种逻辑能力，怎么混进开发行业的？！）4.我们用什么VPN有自己的选择能力，轮不到你来指手画脚！你所列举的稳定性，速度，相差甚远！5.你要举报我骂人！？好！我草你妈！疯狂的草你妈！你个狗杂种！你妈死了！我操死的！6.你刚才说，如果技术够能够直接破解PRO，怎么这会就不是说好就能好的！？有可能这里好，那里不好？这你还有点说到点了，之所以来这里，就是要看看都有那些坐标，是不能用的。7.你认为的！？那仅仅是你认为的！我们没有讨论他坏与不坏的问题！我们骂他是因为两个月以来一直默不作声。8.玷污Github！？高雅不是装的，孙子才是装的！你就是那种装孙子的东西！（是非因果，没搞清楚，就来装圣人，假装劝架！你这种是要遭雷劈的！Lantern有报告问题的，在座的所有人，都不止一次的报告过问题，但是，一律石沉大海。遂来此......）,所以，我断定，你连最基本揣摩用户行为的能力都没有，就直接下断言，你这么垃圾的逻辑能力和分析能力，是开发人员！？走后门的吧！9.本地的中国人，英文打的再多，也不能比中文输入快，这是常识！你个傻逼！10.仔细看看那哥们的意思，他可没说顾客需要练好英语，才能反馈，你说你是中国人！？杂交的吧！！！这你都能理解错！忘本了吧你！！！11.你一个用赛风，FreeVPN的，大家不是不知道，你说稳定！？我只能呵呵了.....睁眼说瞎话，就是你做人的根本吧！12.你说你是开发者，不知道开发最重要的是数学吗！！！？？？英语不好就编不好代码？你是从业人员吗？13.我觉得你从始至终强调自己是开发者，才是对整个行业的玷污！你这逻辑能力，真的不像是开发人员！一个刚刚说完自己取消订阅，还出来，扯这么多的狗杂种，出尔反尔如此之快！？你有脸说自己是中国人！？最后你不是要去举报我吗！？我担心你没有证据！所以给你点证据，请看以下：我草你妈！Fuck your mom ！ 我草你妈！Fuck your mom ！ 我草你妈！Fuck your mom ！ 我草你妈！Fuck your mom ！ Shot to your mom&#x27;s face! 现在进行官方的回复： 之前我对您是一条一条回复的，如果您还要继续，也请按照我的序号来； 十分抱歉，我跟不屑与您这种啥都不懂的浪费时间。哦另外，如果我是联合国秘书长，您可能死哪了都不知道； 我随随便便都可以搭个网站，再绑定一个低价域名，就比如这个blog，除了域名花了几个钱以外，我一分钱都没花； 我谈到破解PRO版本就是因为您之前质问我：“有本事你破解啊，反正老子是花了钱的”，相关评论已被删除所以证据可能找不到； 我只是在向您推荐，并没有“指手画脚”呢。另外，VxN这个东西，或许确实我连接时比较快，您连接的时候就慢了，这也不是我的锅，就当您RP不好呗； 谢谢您提供充足的证据呢； VxN很明显会有很多IP会不能用，这点可以说是我之前知识上的某种匮乏。总之，一个明摆着的事实就是，一个IP被zf操作封了以后，基本是不可能解封的，所以很明显IP需要不断更新，而之所以您来骂人不就是因为已有的IP都不能用了吗？我前面说到了，网络环境和网速也是重要的因素； 好吧我不太清楚您在说什么，反正我认为我在回复时已经完全搞懂了您的问题。毕竟，我可以告诉您的是，您完全没有分析能力，您之所以骂人是因为您遇到IP无法连接的情况并进行了反馈。然而，Lantern开发者在两个月内都没有对您进行反馈，所以您变为一种硬性、强烈而极端不合理的要求：money back!； 我可以告诉您，您的行为就是在玷污Github，同时还滥用了PR板块的功能。我不太能理解“装孙子”的意思，或许是因为我很少骂人； 对不起，我英文打字就是比中文快。看您英语的能力，加上您如此的叙述，我其实非常吃惊：您难道是用易语言开发的吗？英语不好还能当开发者？抱歉我无法理解您的意思； 好吧，我理解错了，您满意了吧，回复的时候有一点偏激。不过话说回来，您的回复里类似的语言多到我都数不清呢； 我用免费的VxN确实够了，速度也够快，流量我也不需要太多。话说您需要这么多流量和这么快的网速干什么？普通的查资料都够了，只是不能看Youtube的视频而已（其实也不确定，有些时候Youtube也可以看）。另外，实在不行用IDM下载Youtube的视频离线看也不是不可以啊，只是需要多等待一会而已； 抱歉我不是从业人员，不过我或许比您更清楚数学基本功的重要性，但是看您说话没调理的样子，就问您数学好吗？另外真正能锻炼思维能力的是数学竞赛、物理学竞赛等高中竞赛，说老实话课内科目都不太能锻炼思维能力。上面已经讲过英语的重要性了，不再过多叙述； 首先，我并没有自始自终强调我是开发者。其次，开发者真的需要时时刻刻使用VxN吗？如果要Google，直接用chrome的“谷歌访问助手”插件就可以完美解决。我估计您是要办公休闲时候看Youtube视频吧，那请问您英语不好又怎么能理解呢？另外，Lantern如此昂贵的服务，远不如自搭服务器SSR来的快、来的便宜。由此可以很明显的看出您开发能力和语言能力都不过关。 一句话：个人认为您跟那些在其他国家公共区域大喊CNMB的中国留学生没什么区别。 您可以认为我是“狗杂种”，反正我是实在搞不懂您。毕竟，下载使用甚至还购买了Lantern这样VxN的，可以认为每天都在违法，从您的叙述中您“试用了一段时间”，然后还购买了至少两个月的VxN，说句不好听的，您可能都已经被公安机关记录在案了。像您这种不知廉耻的人，自己作为一个天天违法甚至犯罪的公民，还好意思指责他人“没脸是中国人”，我认为，或许您才没资格做中国人吧！尊重血统的，魔法世界只有Slytherin，现实世界中肯定也少之又少，而您名列其中。祝好！ 哦对了，无意中看到您之前的评论： 123456&gt; 一直都没稳定过都别用它了 ，这帮狗比，跑路了，操他们妈的，一起https://twitter.com/MeiGuoCanKao/status/1143909860515483648 去twitter上，骂这帮狗杂种！！！团结起来，争取让媒体，都知道，那样，还有退钱的可能！！！https://twitter.com/MeiGuoCanKao/status/1143909860515483648https://twitter.com/MeiGuoCanKao/status/1143909860515483648https://twitter.com/MeiGuoCanKao/status/1143909860515483648 终于懂得了您存在的意义。您用来欺骗和诱惑他人的方法很简单：非法利用国外的社区来对国内的一个人或一个企业进行打击，并主张“团结”。我之前写的没错，您就是大喊CNMB的，利用非法手段来让国外的媒体和个人以为某个东西是引起了公愤的。但是，这无疑是对国外社区的一种污染。 我不说多了，毕竟我还是比较怕国内媒体和舆论的围攻的。您就自重吧，最好也别把我丢到国外媒体上去骂。毕竟就国外而言我的关系还是比您的稳定得多。 另外，此人在此PR中还有许许多多的言论，他自己都说过“免费的自由门都能用”，自相矛盾，我也真的无语了… 还欢迎各位在这个PR里找这样的人，找到了麻烦回复一下。 我也就不喷那么多了，当今时代人人都有事做，再一次祝好！ 附赠截图： 下面是本文中提到和部分未提到的重点内容截图：","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[{"name":"非请勿入","slug":"非请勿入","permalink":"http://code004accepted.github.io/tags/%E9%9D%9E%E8%AF%B7%E5%8B%BF%E5%85%A5/"}]},{"title":"Windows 10 快速安装指南","slug":"how-to-reinstall-windows-10","date":"2020-02-10T14:09:06.000Z","updated":"2021-02-14T03:56:40.111Z","comments":true,"path":"2020/how-to-reinstall-windows-10/","link":"","permalink":"http://code004accepted.github.io/2020/how-to-reinstall-windows-10/","excerpt":"之前在一篇关于Visual Studio安装的文章里提到换过一次系统，前几天又换了一次。","text":"之前在一篇关于Visual Studio安装的文章里提到换过一次系统，前几天又换了一次。 我用的是台Lenovo的笔记本（LENOVO ideapad 300S），买的时候预装了家庭中文版的win10，后来越来越不顺手，C盘内存告急，所以我找YBW借了个U盘重装了“精简版”的win10 Enterprise S，由于是精简的，所以禁用了更新和各种功能，并且企业版没有应用商店，即使是用特殊途径下载安装了应用商店也十分不方便，下载的闹钟和时钟（Win10自带应用）到时间居然不会提醒！！！再加上C盘内存再次锐减无法处理，并且为了干掉那盗版系统配套的2345的猥琐导航和近期出现奇葩驱动错误蓝屏，我决定重装电脑，而且一定要装正版的。 于是，我经过搜索，查到了下面的界面： 我十分高兴！居然微软精心给出了win10 iso的下载链接！ 欸？肿么没有了？肿么只有一个下载工具了？ 我尝试下载了介个工具，然后花了几个小时，结果出现错误:( 重试了一次还是同上。再者，我用这种方式根本无法更换Windows版本！肯定企业版升级了还是企业版… 后来，我发现了一个奇怪的地方 为什么Google的蜘蛛爬到的是个ISO下载界面呢？会不会跟系统有关？媒介工具是exe文件，肯定只有Windows系统能运行，那么如果我是MacOS或者Linux用户呢？微软肯定不会放弃这个赚钱的机会吧，不可能连个下载链接都不给吧 于是，我点击了Google的网络快照 这不就是我想要的吗！ 于是我快速地选择了版本，点击了Confirm，然后出现了下面这句话： Validating your request. This may take several minutes. Do not refresh the page or select back, doing so will cancel the request. 然后网页就卡住了… 我灵机一动：如果我在手机上访问呢？我尝试了一下，果真有了ISO下载页面 这样的话…我想到了Chrome内置的手机模拟器 对了，就它了！ 使用“手机”打开并刷新后，我们看到了下面的界面： Awesome!!! 版本那里选择Windows 10（当然了如果你想要家庭中文版也可以，不过那就没办法换语言咯~） 下面会出来一个语言选择，选择你想要的语言（不过其实也无所谓，因为后面可以改的） 有简体中文，也有英语的，都可以选择。 选择完后，等待片刻，出现一个让你选64位还是32位的界面（注意下载链接仅12小时有效），选择，开始下载即可。 文件大小5G多（根据语言不同而不同），用IDM下载速度大概12M/s，总耗时大概在10mins左右（这里网络环境一般），如果不够快可以设置32线程。 等待下载完成后（上面截图是下载的简体中文版，我当时用的英文版），把它放到一个非系统盘的文件夹里，建议单独建一个，比如这样 接着，使用像U深度这样的U盘PE写入工具，并选择一个U盘（并将你的数据备份到一个非系统盘，因为你的U盘会被格式化，而安装系统时你的C盘会被重置） 接着，百度一下你的电脑进入BIOS的方式，比如我就需要百度： 联想笔记本如何进入BIOS 获得快捷键后，重启电脑，在出现品牌Logo时迅速并连续地敲击那个快捷键 接下来因为各品牌不同，所以请自行百度： 联想笔记本如何U盘启动 （请把联想笔记本换成您的电脑品牌） 学会了以后，进入PE安装系统，像U深度，你进入后选择你*的ISO文件并还原即可，此过程大概耗时5~10分钟 完毕，重启，拔掉U盘，进入系统设置界面 中文版我不知道，反正英文版会有Cortana很耐心地帮你提示。至于激活，如果有类似于我没有激活码或者稍后激活之类的选项就选，实在没有就用手机买一个呗 也可以直接百度Win10家庭版激活码，然后直接填进去即可 我是因为笔记本本身自己带了家庭版的系统，然后之前我登录了微软账号，所以我的license直接跟我的账号绑定了。安装过程中我登录了微软账号，所以就直接自动激活了，反正我设置里是这样说的： 总之，安装过程按照屏幕上的来操作就行了，注意： 如果出现那种纯色背景一串白字然后转转转的，提示什么正在准备Windows的，不要按照网上的某些方法强行关机，否则可能造成你白干了这么久。除非等待时间超过3~5小时，并且你需要尽快使用电脑，否则不要不要不要强行关机，按照屏幕说的做。 重启后，在设置中安装一些更新和驱动并重启，即可了！！！ 另外，最新版本的Windows的Cortana非常高级哦~ 1234567- Hey, Cortana. Open Google Chrome.- Sure, opening Google Chrome Canary...- Hey, Cortana. Cancel my alarm clock.- Cancel your alarm clock for what time?- Three Forty P.M..- Sure. 简直比Siri还高级！ 好了，本文到此结束了，博主也该睡觉了（当前时间12:44 A.M.），有什么问题欢迎在文末处留言，涉及隐私的问题也可以直接发邮件到 code004@qq.com 哦！ Thx for reading!","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[{"name":"搭建","slug":"搭建","permalink":"http://code004accepted.github.io/tags/%E6%90%AD%E5%BB%BA/"},{"name":"系统","slug":"系统","permalink":"http://code004accepted.github.io/tags/%E7%B3%BB%E7%BB%9F/"}]},{"title":"关于新型冠状病毒的公告","slug":"notice-about-2019-ncov","date":"2020-02-01T14:48:52.000Z","updated":"2021-02-14T03:56:40.115Z","comments":true,"path":"2020/notice-about-2019-ncov/","link":"","permalink":"http://code004accepted.github.io/2020/notice-about-2019-ncov/","excerpt":"","text":"众所周知，近期武汉疫情严重，已于1月23日封城。为了响应世界卫生组织的号召，减少群众聚集活动，现给出下面公告（原发布时间应为1月23日，由于意外导致博主不能使用电脑，故延迟至今日发布） 关于新型冠状病毒的公告2020.02.01 14:48:52 公告作者：code004/code004Accepted 考虑到武汉疫情的严重性，现经博主思考决定，开发团队商讨，公布以下关于GC Server的公告： 取消GC Server项目发布会，本次发布会内容与下次合并； 延迟第三届全国青少年网络安全专题研讨会，时间另行通知； 取消GC Server新年欢庆特别区域，改为聚焦疫情特别区域； 将在线新年直播活动取消，改为一个简单的仅拥有2020新年倒计时的画面（并在Github上开源）； 感谢理解，如有疑问请联系 code004@qq.com ，谢谢。","categories":[{"name":"公告","slug":"公告","permalink":"http://code004accepted.github.io/categories/%E5%85%AC%E5%91%8A/"}],"tags":[{"name":"GC Server","slug":"GC-Server","permalink":"http://code004accepted.github.io/tags/GC-Server/"}]},{"title":"也谈2020元调英语阅读题","slug":"anti-january-invest-exam","date":"2020-01-10T09:54:38.000Z","updated":"2021-02-14T03:56:40.071Z","comments":true,"path":"2020/anti-january-invest-exam/","link":"","permalink":"http://code004accepted.github.io/2020/anti-january-invest-exam/","excerpt":"以学术的态度，评价一下2020年武汉市元月调考英语阅读题","text":"以学术的态度，评价一下2020年武汉市元月调考英语阅读题 先来看一下元调原题：（原图来自家长100，默认以CC0协议授权） 问题： The news Eimi and her “blank paper” was reported in __. A. Teens B. China Daily C. creative papers D. the professor’s class 欢迎参与选项调查： 好的，现在宣布一下，标答是B. China Daily 如果你和我一样选的A，欢迎听一下我的理解： 这篇报道中有一幅图片，图片下方有注释(Eimi and her “blank papeer”.) 然后注明了，图片来自CHINA DAILY 然后，右下角注明了TEENS，所以我认为，这篇报道是来自TEENS的 好的，答案说是来自CHINA DAILY的，好，我就当是我脑子有问题，我们来查一下： Google搜索标题结果： Google搜索内容结果： BBC报道（搜索的第一条结果）截图： ChinaDaily搜索网址：https://newssearch.chinadaily.com.cn/ 如果查到了随时欢迎打脸 由此可见，此篇报道是虚假的，图片违反CC BY-NC-ND协议进行了违法的更改与批注 同时，我个人始终坚信此题答案应为A. Teens 对武汉市教育科学研究院表示强烈谴责，并要求给出说法 UPDATE：网上有人传出图片： 图片是21世纪英文报，所以这篇阅读是直接转载的 那些**认为21世纪英文报属于ChinaDaily，所以应该是ChinaDaily 他们对Teens的解释是官网右上角的“中学Teens 小学Kids” 也就是说Teens是21世纪英文报的一个分区 好的，我们打开随便一篇21世纪英文报的官网 https://kids.i21st.cn/ 可以看到，这是小学区的，然而图片中杂志首页标题是TEENSKids 点进去看一下 作者也是TEENS 在21世纪英文报官网上点击任何一个读报界面，都写了作者是TEENS，注意是大写的 我们来看一下官网上的杂志封面图片 Kids: Junior: Senior: 如图所示，不用再讨论了，TEENS是一个杂志，这篇报道是TEENS出的，ChinaDaily最多也就是提供了图片","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[{"name":"学校","slug":"学校","permalink":"http://code004accepted.github.io/tags/%E5%AD%A6%E6%A0%A1/"},{"name":"英语","slug":"英语","permalink":"http://code004accepted.github.io/tags/%E8%8B%B1%E8%AF%AD/"}]},{"title":"什么？你的文章被爬虫爬了？","slug":"what-to-do-if-posts-are-copied","date":"2019-12-13T19:52:56.000Z","updated":"2021-02-14T03:56:40.155Z","comments":true,"path":"2019/what-to-do-if-posts-are-copied/","link":"","permalink":"http://code004accepted.github.io/2019/what-to-do-if-posts-are-copied/","excerpt":"警告：本文是作者于极度愤怒中写下的，部分语句可能有失偏颇，请自行辨别！","text":"警告：本文是作者于极度愤怒中写下的，部分语句可能有失偏颇，请自行辨别！ 在12月11日，也就是前天，我闲着无聊，百度了一下我的项目—GC Server 然后我注意到了第一页的第5个搜索结果，叫做使用C++制作GC Server过程详解，内容来自脚本之家 嗯？脚本之家？我没有在里面发过文章啊？ 打开一看 嗯，弄了一整页广告，然后作者还是wellwill！ 内容完全一样，明显是直接复制的 结尾处写到：“原文链接：https://www.cnblogs.com/petewell/p/11588761.html” 没错，脚本之家是转载的，但不是转载我的，是转载别人转载我的！ 我难道没注明禁止转载？我检查了一下，好得很啊 我难道没设置复制时提醒？我测试了一下，firefox chrome ie都好得很啊 那怎么解释？ 不用解释，你的文章是被爬了 当然了，我的这篇更搞笑，是有人转载了我的，然后被爬了，然后转载的人又自己删除了（或许是看到了我的声明） 真有意思 于是我在LG发了这个讨论：求助：侵犯版权事件如何解决？ （然后kkk竟然亲自回复了orz 然后我又辛辛苦苦找出Commits链接：https://github.com/code004Accepted/code004accepted.github.io/commit/32c1162aff110d01777ea6cb73cbb665483aa250#diff-80a60275b6f1846819b5c2e3f55402a0 好了，证据充足，发邮件！ 2、(脚本之家 jb51.net)上的所有提供下载的软件和资源均为软件或程序作者提供和网友推荐收集整理而来，仅供学习和研究使用。如有侵犯您的版权，请联系我们(QQ 461478385 或 邮箱 admin@jb51.net)，本站将立即改正。 邮件原文： 1234567891011121314151617181920212223242526尊敬的脚本之家管理员：您好。我是GC Server的项目总创始人兼开发总监code004（或称code004Accepted），我的博客网址是 https://code004.ml昨日我在百度搜索GC Server时，发现您网站的一篇文章，地址如下： https://www.jb51.net/article/170874.htm文章更新时间为2019年09月26日 09:48:39，作者为wellwill然而，经过对内容的仔细核对，我发现，本文内容完全转载于我的博客，原文地址： https://code004.ml/posts/make-your-own-gc-server-with-cpp/此文章与我的文章仅标题有两字之差，而很明显我的博客中原文发表于2019年05月19日，信息发布于Github上是在7月15日：https://github.com/code004Accepted/code004accepted.github.io/commit/32c1162aff110d01777ea6cb73cbb665483aa250#diff-80a60275b6f1846819b5c2e3f55402a0Commits是无法作假的。上述网址中可以明显看出，在7月15日前我就发布了该文章，因此我有充足的证据说明此文章侵犯了我的版权此非法转载的文章底部有“原文链接：https://www.cnblogs.com/petewell/p/11588761.html”字样，此链接无法打开，显示404由此，脚本之家（或者wellwill用户）非法转载了我的文章全文（文章底部和侧边栏有明显标记说明文章禁止转载，复制时也会弹出提示框），请您看到后尽快删除，或者在更换作者与原文链接的前提下与我进一步协商转载事宜。此致code004@qq.com2019/12/12 22:53 QQ邮箱告诉我昨晚10:53投递到了对方邮箱 于是，我就等待着一封能够解释清楚这一切的邮件（与此同时浏览了几个相关案例： https://zhuanlan.zhihu.com/p/75168287 https://www.zhihu.com/question/336889376） 嗯，一直没回邮件，我等着 欸，怎么原文里的作者和地址改了？哦 我不是说了要 在更换作者与原文链接的前提下与我进一步协商转载事宜 吗？ 哦，脚本之家八成忽略了？ 于是，我又写了一封邮件过去 考虑到此次事件影响不大且已基本解决，本文不再更新，但还是想骂一下那些抄袭他人成果的人，或者说，那些抄袭他人成果的低级生物。","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[{"name":"博客","slug":"博客","permalink":"http://code004accepted.github.io/tags/%E5%8D%9A%E5%AE%A2/"}]},{"title":"如何免费获得XES的《元调训练手册》","slug":"how-to-get-xes-books-for-free","date":"2019-11-29T20:26:12.000Z","updated":"2019-11-29T20:26:12.000Z","comments":true,"path":"2019/how-to-get-xes-books-for-free/","link":"","permalink":"http://code004accepted.github.io/2019/how-to-get-xes-books-for-free/","excerpt":"本文会教您在花费不超过30分钟的情况下成功弄到XES最新的《元调训练手册》 文章内容较为猥琐，请自行辨别。博主不承担任何形式的任何责任","text":"本文会教您在花费不超过30分钟的情况下成功弄到XES最新的《元调训练手册》 文章内容较为猥琐，请自行辨别。博主不承担任何形式的任何责任 简介众所周知，XES是一家非常良心的机构，以优质的资源/优秀的教师团队/良好的学习环境著称 而（对于我来说）XES最吸引人的地方不仅在于它的教师有多好，而在于它辛勤的教师们花费大量精力编辑出的各类手册 有哪些手册呢？ 手册大概分为下面几类： 期中期末元调四调中考备考手册，集结大量历年真题并配有详细解答 化学常用知识点手册，再也不用把书到处翻了 各类专题复习资料 总体来说，XES还是不错的 但是，它十分地坑钱 而且，资料全部都是内部的（它在校门口发的那些所谓《期中复习手册》不算，那些是瞎搞的，就三套题，那么薄） 元调将临，XES也出了内部学员才能领的《元调训练手册》（数学/物理/化学）（并对其它年级出了《期末训练手册》） 问题在于它是收费的啊qwq 寡人不才，今夜潜入XES并成功获取三本手册，下面介绍一下领取的教程 步骤抵达XES本文仅适用于EZGY的同学们，所以统一采用张自忠路分校作为规划地点，其它分校请自行探索 进入楼梯间 然后上到四楼 出楼梯间 找到讲义室应该在楼梯间里面通过门都能看到qwq 提醒：讲义室的门应该是开着的，门左边有一个三棱锥，两个侧面写着“讲义室” 情景对话部分这一部分建议提前准备好 我和lzc一起去的时候，在路上想了许多种对话，结果发现完全没有必要 你跟老师打声招呼，然后说病了/有事，错过了发《手册》的课（记住说明你是数理化三科都在XES，然后三科都没拿到），那个老师就会帮忙翻箱倒柜给你找出来 我其实挺担心的，因为昨天lty和wsf就已经去过并拿过了，今天我和lzc又用了类似的借口，他们或许会起疑心 总之，有备无患吧。最好在班上了解一下各科老师的姓名，方便到时候胡编乱造 怕的就是老师刷你学生卡（那种ID的），估计你说没带可能不会被放过qwq 如果实在怕可以事先排练一下，但是也很有可能没必要 拿到手册，检查无误老师可能视力不好，给你拿了七八年级期末的手册，你可得注意看着了，可别到时候再跑一趟 打道回府（溜之）下来的时候注意不要疯跑，防止引起讲义室老师怀疑，或者被其他老师抓到然后问你哪个班的（这种情况直接跑，假装没听到） 注意事项 请注意手册只有数理化三科，不要没有常识 请注意，XES的规则是，你报了哪科的班领哪科手册，所以老师如果问你必须回答三科都在XES上课 出去的时候可以和同伴装一下，lzc当时就说“走吧，去上课吧”，我也马上接了一句“好啊” 注意不要做贼心虚，注意不要做贼心虚，注意不要做贼心虚，千万不要脸红/出汗/支支吾吾 本文作者不承担任何法律责任 据说周一到周三晚上XES不上班，所以不要那个时候过去然后跑到黑灯瞎火没有人的四楼去“偷” 做好规划，有备无患，我当时写了满满一张纸 建议2个人一起过去，1个人也可以，最好不要超过3个人，否则肯定会引起怀疑 注意变换角色，在一楼和楼梯间的时候假装你是去上课的，在四楼的时候假装你是先领取漏掉的手册然后去上课的，否则你单独跑过去领手册就会很可疑 另外，如果你自己没时间去，不要委托你的朋友，因为他们做不到。那个老师跟我说了，必须个人去领，而且必须“XES当科学员”。我当时想帮ybw带一本化学的，结果被老师阻止了 如果你实在搞不了，找同学复印吧 祝各位同学坑XES愉快！（huaji","categories":[{"name":"教程","slug":"教程","permalink":"http://code004accepted.github.io/categories/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"学校","slug":"学校","permalink":"http://code004accepted.github.io/tags/%E5%AD%A6%E6%A0%A1/"}]},{"title":"关于 CSP-J2/S2 2019 江西赛区考生代码丢失事件","slug":"about-ccf-lost-source-code-in-jx","date":"2019-11-22T23:00:23.000Z","updated":"2021-02-14T03:56:40.035Z","comments":true,"path":"2019/about-ccf-lost-source-code-in-jx/","link":"","permalink":"http://code004accepted.github.io/2019/about-ccf-lost-source-code-in-jx/","excerpt":"","text":"待更","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[]},{"title":"一次特别的经历","slug":"a-particular-experience","date":"2019-11-12T21:04:35.000Z","updated":"2021-02-14T03:56:40.035Z","comments":true,"path":"2019/a-particular-experience/","link":"","permalink":"http://code004accepted.github.io/2019/a-particular-experience/","excerpt":"特别注明：本文是作者亲身经历的记叙，严禁任何形式的转载（包括片段与全文），如果实在有转载需要，请联系code004@qq.com，得到授权声明后方可转载","text":"特别注明：本文是作者亲身经历的记叙，严禁任何形式的转载（包括片段与全文），如果实在有转载需要，请联系code004@qq.com，得到授权声明后方可转载 今天（2019.11.12）下午体育课（14:00-14:40），我遇见了一个七年级的小朋友 当时我在教学楼下面一排树下闲逛，便看到了这个小朋友—他没有跟着任何同学，孤身一人，而且好像在向着树梢看 我走过去，打量了一下他： 个子不高，应该在七年级里面都只能算中等身高，而且还戴着红领巾，所以肯定是七年级的 头发较长（违反校规），呈自然金黄，有点可爱 校服外套里穿着自己的运动服，不属于书呆子类型 脚下穿着Air Max 720，属于中上等家庭，但很明显有良好家教与节俭习惯，也不追随潮流 我走过去，问他在干什么。他说，羽毛球拍在树上 因为对着太阳光，看不清，我换了一个角度，看到了他所描述的羽毛球拍。几乎在树顶，没有人能够得到。这位小朋友一直在尝试摇动树干，但树干始终不动一丝一毫 我让他去门卫处找跟长杆子来试一下，他找来了用来给跑道划线的粉笔勺，却还是不够高。他尝试踮着脚也大概还差0.7m的样子。他拿着杆子尽全力向上跳了一下，不仅没够到，还差点把左脚伤了 我看他抱着左脚尖（他是左脚尖着地的），问他，你没事吧 他嘟囔了几句，“…我妈要说我的…”，我估计应该是鞋尖被压破了 正逢我们班上几个同学经过，他和我们班上的随即尝试各种办法试图晃动树，无动于衷，他还搞得自己一身粉笔灰 我去门卫处问了一下，他们的回复：“唉怎么每天都有这种事情啊，你们这些学生真烦，我们没有竿子” 沟通失败，我回去，看到我们班的cyf同学不知道从哪里弄来一瓶喝了一半的农夫山泉（后来他承认是从地上捡过来的别人喝了的qwq），他在用矿泉水瓶砸羽毛球拍，准确率大概在50%左右，几次碰到了球拍，然后把球拍打偏了，但是由于学校的树木的树枝比较坚硬顽强，球拍终究没能掉下来。我们班上的一些女生也都围了上来，在一旁吃瓜。 这位小朋友也很紧张，自己也用矿泉水瓶砸了一下，准确率大概20%，球拍还是稳稳当当地在上面 后来，体育课下课，他的同学们也纷纷围过来。他告诉我，其实那上面的是他同学的球拍，也是他同学弄上去的（估计用了某些玄学办法），他耗费40mins尝试弄下那个羽毛球拍仅仅是为了友谊（需要注意的是，他的同学在自己玩耍，而他在这里帮他同学处理问题） 友谊——一个在初三，多么少见的词汇 初三繁忙的学习工作，让我们把仅有的休息时间也抓得牢牢的。就我个人而言，我在初三是绝对不会为了同学之间的友谊在同学没有浪费的情况下浪费40分钟的，我可以说30分钟都不会，可能最多20吧 他回答我的原话是：“因为我们是好朋友啊” 可是，为什么，到了初三这样一个关键时期，许多人就忽视了友谊？难道仅仅是因为学习？或者，是我个人相处的问题？ 我不这么认为 我认为，这是一个值得我深刻反省的问题——学习在前，友谊被丢弃到了何方？ 那个孩子，看起来也是他们班被校园欺凌的对象——或许他这样做，也只是为了讨好别人？ 我不得而知，我只知道，那个球拍还在树上。 PS：他是七年级12班还是14班，我已记不清了qwq UPDATE 2019/11/19 今天又碰到他了，确认过了，七年级15班的（这记性被狗吃了 观察了一下，他是他们班今天篮球课最active的一位（同学们在后面排队投篮的时候，他在队伍最前面帮忙捡球&amp;自己多投几次篮，体育课代表？中篮率&gt;=80%啊orz），由于身高较矮总是被同学欺负，感觉他尝试融入集体的方式和我七年级的时候简直一模一样—只会让同学更不喜欢他 总感觉我和他有许多相似之处，希望两年后他不会像我如今这样和同学们渐行渐远 昨天做到一篇语文阅读，文中说，一个异类仿佛像调味剂一样，可以让友谊更亲近 我就是我们班的那个异类，毫无疑问。我是以几乎最优秀的小学奥数成绩将所有死培优的他们打脸之后进来的，全免学费，而且我还是跨区的（小学在硚口区，初中在江岸区），再加上我小学五年级由于一些个人原因没有读（四年级上完直接上六年级） 我很明显是几乎所有群体里的异类，这也是一个我自己无法改变的事实。 或许这位小朋友也是他们班的异类吧，总希望他能和同学们相处得好一些吧qwq 另：确实是中上层家庭啊，上周二/本周一/本周二我已经看到三双不同的气垫鞋了qwq UPDATE 2019/11/22 更正：只有两双，上周二/本周五（今天）是同一双（就是前文中提到的Air Max 720），本周一/本周二是另一双（没看出来，反正是Nike的气垫鞋） UPDATE 2019/12/3 现在我们的体育课被取消了:( 但是每次上午大课间跑完操以后都能在上楼梯的地方左边找到他。 今天穿的好像是一双New Balance的（ 昨天还是那双Air Max 720","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[{"name":"学校","slug":"学校","permalink":"http://code004accepted.github.io/tags/%E5%AD%A6%E6%A0%A1/"}]},{"title":"GC Server 版本发行规则","slug":"gc-server-version-rules","date":"2019-11-10T21:14:54.000Z","updated":"2021-02-14T03:56:40.095Z","comments":true,"path":"2019/gc-server-version-rules/","link":"","permalink":"http://code004accepted.github.io/2019/gc-server-version-rules/","excerpt":"版本规则GC Server自2019年12日起，版本发行分下面几类：","text":"版本规则GC Server自2019年12日起，版本发行分下面几类： StableStable是稳定版，一般是针对某个新功能的更新或针对之前版本的某个Bug的修补 Stable版一般来说不会存在新功能兼容等问题，是相对来说最稳定的版本 SpecialSpecial是特别版，一般在某个节日前后发行，可能有针对某个新功能的更新或针对之前版本的某个Bug的修补，但大部分时候只是更换以下封面图或者加一些节日特色栏目而已 Special版一般来说不会存在新功能兼容等问题，也是相对来说最稳定的版本 BetaBeta是测试版，一般是针对某个新功能的尚不能完全兼容的更新 Beta版有较小可能会出现各种Bug，建议希望体验较为稳定的最新功能的用户使用，也希望各位能将使用过程中的体验&amp;感受或Bug的反馈发送给我 总体来说，Beta版是相对来说较为不稳定的版本。您可以将Beta版理解为大范围公测 DeveloperDeveloper是开发者版，一般是针对某个最新功能的有极多Bug的更新 Developer版有极大可能会出现各种Bug（所以如果您想将GC Server的安装包分享给您的朋友，切记不要选择Developer版），仅建议希望体验最新功能，了解开发组下一步发展方向的用户使用，也希望各位能将使用过程中的体验&amp;感受或Bug的反馈发送给我 总体来说，Developer版是最为不稳定的版本。您可以将Developer版理解为小范围公测 更新频道预计我们会于2019年12月~2020年2月推出GC Server的检查更新功能 预计（只是预计），GC Server检查更新会有下面几个频道： Normal: 检查更新时会忽略Beta/Developer的更新，仅检查Stable/Special的更新 Leader: 检查更新时会忽略Developer的更新，仅检查Stable/Special/Beta的更新 Tester: 检查更新时会检查所有版本的更新 另外：GC Server不会推出任何形式的自动检查更新功能，所有检查均由用户手动触发 为了保证用户数据的安全，我们可能定期更改密码保护策略，所以还是建议各位用户定期检查更新","categories":[{"name":"项目","slug":"项目","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/"},{"name":"GC Server","slug":"项目/GC-Server","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/GC-Server/"}],"tags":[{"name":"项目文档","slug":"项目文档","permalink":"http://code004accepted.github.io/tags/%E9%A1%B9%E7%9B%AE%E6%96%87%E6%A1%A3/"}]},{"title":"GC Server 在线登录功能","slug":"gc-server-online-login","date":"2019-11-10T20:56:57.000Z","updated":"2021-02-14T03:56:40.095Z","comments":true,"path":"2019/gc-server-online-login/","link":"","permalink":"http://code004accepted.github.io/2019/gc-server-online-login/","excerpt":"","text":"咕了如此之久的在线登录功能，终于在昨晚凌晨1点搞定啦！ 登录界面和原来一模一样，不过差别可大了qwq 原来的方法： 将用户账号密码明文直接存放在代码中，判定比较快，但是，极不安全，用户信息极易泄露，而且还无法检验用户的合法性与真实性，很容易造成严重的密码泄露事故 现在的方法： 首先，将用户账号密码密文存在一个不为人知的角落 然后，每次登录时调动下载器下载这个密文 接着，将用户输入的账号密码加密，与标准的密文逐行比较 注意，新方法里除了用户在客户端登录时输入的账号密码以外，没有任何账号密码的明文出现，整个传输&amp;比较过程全部用的是密文 明显安全了许多，不过就是需要联网啦qwq 把以前的普通用户（姓名登录）改名叫做离线登录，没网就只能离线咯qwq 另外，一个好消息： 新版的用户可以免费注册啦！ 把你的账号与密码发送到code004@qq.com即可申请哦！（请备注申请GC Server账号） 所以，新版本呢？ 当然在GC Server分站啦~ 不过，这个功能还在努力升级ing… 建议还是等Stable版本出来再下载吧qwq","categories":[{"name":"项目","slug":"项目","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/"},{"name":"GC Server","slug":"项目/GC-Server","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/GC-Server/"}],"tags":[{"name":"项目发布","slug":"项目发布","permalink":"http://code004accepted.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83/"}]},{"title":"如何在Minecraft中快速地获取经验","slug":"how-to-get-exp-in-minecraft","date":"2019-10-28T23:42:21.000Z","updated":"2021-02-14T03:56:40.111Z","comments":true,"path":"2019/how-to-get-exp-in-minecraft/","link":"","permalink":"http://code004accepted.github.io/2019/how-to-get-exp-in-minecraft/","excerpt":"","text":"众所周知，MC中的exp（即经验值）是很重要的。可是，你就算干掉末影龙也才那么一点点经验值啊qwq 没关系。就在今天，我发现了有一个很方便的赚经验值的方法qwq 注意：本文基于Java版，且开启作弊与创造 首先，请在主世界建造一个下界传送门（黑曜石），然后进入下界 然后，请使用基岩在下界搭建一个小黑屋，注意底部也需要铺满基岩（建议使用夜视药水），顶端留1~2格的口子。建议长宽在5格左右，高度10格 然后，飞入小黑屋，注意不要太低。 接着，输入以下命令： 1/tp @e ~ ~ ~ 顾名思义，tp是teleport的缩写，也就是传送，@e是指全部实体（包括你自己），相当于把该世界所有实体全部传送到你的位置。自然，除了那些会飞的比如恶魂（恶魂会被屋子卡住然后不断受到伤害最终死掉），其它生物全部落下去了。 这时候，飞出小屋，在你刚刚留的口子那里放上TNT并使用打火石点燃 众所周知，TNT会飞下去，然后就会… （轰隆…） 这时候你大概知道为什么我强调小黑屋底部也要铺基岩了吧，血的教训啊… 你可能会说，有可能TNT的伤害不够啊，怎么办？ 没关系，你下去领经验值的时候，可以不用到底，把下面没干完的怪物留到下批。或者你也可以把小黑屋的顶去掉，然后铺满TNT… 当然了，把这些东西写到命令方块里，通过红石控制会更方便qwq 效果（1.14.4）：每次（最多20s）可以让你获得10s都吸不完的经验值，反正比末影龙的效率高多了qwq","categories":[{"name":"游戏","slug":"游戏","permalink":"http://code004accepted.github.io/categories/%E6%B8%B8%E6%88%8F/"},{"name":"Minecraft","slug":"游戏/Minecraft","permalink":"http://code004accepted.github.io/categories/%E6%B8%B8%E6%88%8F/Minecraft/"}],"tags":[{"name":"娱乐","slug":"娱乐","permalink":"http://code004accepted.github.io/tags/%E5%A8%B1%E4%B9%90/"}]},{"title":"关于校园欺凌","slug":"about-school-bullying","date":"2019-10-21T00:05:13.000Z","updated":"2021-02-14T03:56:40.035Z","comments":true,"path":"2019/about-school-bullying/","link":"","permalink":"http://code004accepted.github.io/2019/about-school-bullying/","excerpt":"","text":"简介作为一个初中三年都始终无法与群体融合的学生，我对校园欺凌深有感触 留个坑，以后填。","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[{"name":"学校","slug":"学校","permalink":"http://code004accepted.github.io/tags/%E5%AD%A6%E6%A0%A1/"}]},{"title":"公告板","slug":"notice","date":"2019-09-15T00:10:39.000Z","updated":"2021-02-14T03:56:40.115Z","comments":true,"path":"2019/notice/","link":"","permalink":"http://code004accepted.github.io/2019/notice/","excerpt":"警告：在访问本站任何页面前，请仔细阅读本文，以免给您带来不必要的麻烦！任何因未阅读本文造成的后果请自己承担！","text":"警告：在访问本站任何页面前，请仔细阅读本文，以免给您带来不必要的麻烦！任何因未阅读本文造成的后果请自己承担！ 关于版权本站文章可以分为三类：有意义原创，转载与无意义原创 对于有意义原创文章，会在文章底部再次声明版权协议。对于此类文章，欢迎您分享原文地址，未经许可禁止进行任何摘录与任何形式的转载（如有转载或摘录需求，请联系 code004@qq.com ，只有在您收到明确回复的情况下才允许转载）。根据 CC BY-NC-ND 协议，您不被允许发布基于文章的再创作，也就是说，您不能对文章内容进行修改后再发布，尽管文章可能出现知识性错误。如果文章出现知识性错误，请在评论区告知（或者，如果因为某种原因，此文章没有评论区，请在留言板告知），而不是私自摘录并修改。 对于转载文章，我会声明原文地址与作者。如果您认为我侵犯了您的版权，请在评论区告知，我会立即删除相关文章并私下商谈。此类文章在转载或摘录前，请仔细阅读原作者注明的协议，否则后果自负。 对于无意义原创文章，底部既没有再次声明版权协议，文章中又没有声明原文地址或作者。此类文章，允许全文转载，但请在醒目位置附上原文链接及作者。同样地，根据 CC BY-NC-ND 协议，您也不允许发布基于文章的再创作。 本站在您复制文字前加上了提醒（但是仍然可以复制成功，如果不成功请重试），希望您尊重博主的版权，否则一切后果自负。 关于评论本站原采用Gitalk系统，后期考虑到其不稳定，且拥有读取用户所有公开仓库（public repo）的权限，不完全安全，故现已改用Utterances作为评论系统。在您登录时，无需对任何应用进行授权。如果您已登录Github账号，请点击评论框右下角的”Sign in to comment”，登录成功后您会自动被重定向回到相关界面；如果您未登录Github账号，点击上述按钮后会出现Github的登录界面，照常登录即可。 对于评论区中吵架/骂人等不适当的言论，博主保留删除的权利。其他正常评论，有小概率可能因为数据迁移或博主手滑而导致丢失，对此博主不承担任何责任。 评论加载速度可能比较慢，如果超出了您忍受的限度，请尝试切换到Coding线路再次登录。 关于学术问题如果本站的文章中出现任何学术问题，请不要私自转载并修正错误。请在相关文章的评论区告知。如果文章没有评论区，请在留言板告知。对于为了修改错误而进行的违规摘录/转载，按照上述版权协议处理。 关于本站中的代码与文件由于博主是个很喜欢敲代码/写工程的coder，本站中难免会出现大量代码与文件。现作下列声明： 本站所有可能对您的电脑造成危害的代码或文件均会特别告知，如果因为使用/查看了危险代码或文件造成您的损失，本站概不负责。 本站所有未特别声明的代码均为在博主本机或虚拟机上测试通过的代码，文件均为博主正常使用无危害的文件。如果因为使用/查看了安全代码或文件造成您的损失，本站同样概不负责。 附加声明对于本公告或本博客的任何文章的版权问题，请在对应文章下留言或在留言板中留言（或发送邮件到 code004@qq.com ）仅在您收到明确答复后才允许进行转载/摘录等","categories":[{"name":"公告","slug":"公告","permalink":"http://code004accepted.github.io/categories/%E5%85%AC%E5%91%8A/"}],"tags":[]},{"title":"GC Server 的最新消息","slug":"recent-activities-of-gc-server","date":"2019-09-10T22:34:16.000Z","updated":"2019-09-10T22:34:16.000Z","comments":true,"path":"2019/recent-activities-of-gc-server/","link":"","permalink":"http://code004accepted.github.io/2019/recent-activities-of-gc-server/","excerpt":"自从8月底，我们就再也没有看到过GC Server的更新了qwq 是的，这是因为项目咕咕了所有开发者都是初三或高一学生，他们不再有那么多空闲时间来更新 很惭愧，教师节居然没出专版，连个主题都没出… （别担心，我们会补上的 主要是因为，现在GC Server的Beta版本的开发已经到了界面美化阶段（其实代码简化也只完成了70%），目前正在着手于把所有黑底白框框按钮的界面换成图形化界面，这也会大大提升加载速度和响应速度 除此之外，我们正在研发以下两种（相对来说）比较高级的功能：","text":"自从8月底，我们就再也没有看到过GC Server的更新了qwq 是的，这是因为项目咕咕了所有开发者都是初三或高一学生，他们不再有那么多空闲时间来更新 很惭愧，教师节居然没出专版，连个主题都没出… （别担心，我们会补上的 主要是因为，现在GC Server的Beta版本的开发已经到了界面美化阶段（其实代码简化也只完成了70%），目前正在着手于把所有黑底白框框按钮的界面换成图形化界面，这也会大大提升加载速度和响应速度 除此之外，我们正在研发以下两种（相对来说）比较高级的功能： 检查更新。系统会自动从网络中获取新版本信息。用户可以选择其希望接收提醒的版本（比如普通用户就不需要选择内测的版本，这样可以有效减少对用户的打扰）PS：按照规划，GC Server不会自动检查更新，所有更新均由用户手动触发。还有，目前好像还不支持程序自动下载安装更新qwq 用户云端化。之后，GC Server的所有用户信息将会被多重加密后存到一个不为人所知的文件中，登录时自动下载此文件并解密运算。也就是说，再也不需要注册后等到下一个版本才能用啦~ 注册功能貌似行不通，还是得找我（或者其他开发者）手动添加qwq 哦对了，这样的话，用户安全会得到进一步的保障，尽管我们还是不能保证密码完全安全。还有，这样也可以方便的封禁某些账号，通过一个变量检查权限即可。 感谢兹磁，现在我这里的encrypter已经准备好了，就差云端测试了，这估计得等到我有大块空闲时间… 最近不会有太多的版本发行，不过如果大家需要，封面图还是可以做一下的 哦对了，评论改用Utterance了，可能加载有点慢，详情请进入留言板查看qwq Update 20190913: 教师节就被skipped了，中秋节背景和截图如下：","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[{"name":"GC Server","slug":"GC-Server","permalink":"http://code004accepted.github.io/tags/GC-Server/"}]},{"title":"C++文件读入与输出简洁教程","slug":"cpp-read-from-file","date":"2019-09-08T15:23:09.000Z","updated":"2021-02-14T03:56:40.087Z","comments":true,"path":"2019/cpp-read-from-file/","link":"","permalink":"http://code004accepted.github.io/2019/cpp-read-from-file/","excerpt":"既然是“简洁教程”，当然就只讲用法不讲原理啦233 C++从文件中读入一般有两个函数：freopen和fopen，这两个函数都在stdio.h（也就是include中所写的cstdio）里面，使用也都很方便，下面我就分别讲一下 （还有fstream相关的说明，但是因为我太菜了，所以说明极度简略） （大概2/3处还有一个丧心病狂的演示实验qwq）","text":"既然是“简洁教程”，当然就只讲用法不讲原理啦233 C++从文件中读入一般有两个函数：freopen和fopen，这两个函数都在stdio.h（也就是include中所写的cstdio）里面，使用也都很方便，下面我就分别讲一下 （还有fstream相关的说明，但是因为我太菜了，所以说明极度简略） （大概2/3处还有一个丧心病狂的演示实验qwq） freopen用法与理解一般在算法竞赛中我们使用freopen，代码是这样写的： 12345678910#include &lt;iostream&gt;#include &lt;cstdio&gt;using namespace std;int main()&#123; freopen(&quot;test.in&quot;,&quot;r&quot;,stdin); freopen(&quot;test.out&quot;,&quot;w&quot;,stdout); //write your code here... return 0;&#125; 我们知道上面代码中的test.in和test.out是文件名，这没问题 但是，中间的&quot;r&quot;``&quot;w&quot;和最后的stdin``stdout又是什么意思呢？ 我们先来看看freopen在stdio.h中的定义： 123FILE *freopen(const char *filename,const char *mode,FILE *stream); //C99 前FILE *freopen(const char *restrict filename,const char *restrict mode,FILE *restrict stream); //C99 起errno_t freopen_s(FILE *restrict *restrict newstreamptr,const char *restrict filename, const char *restrict mode,FILE *restrict stream); //C11 起 三种版本基本一致，我们以笔者MinGW中的定义为准，参照上面的第二行（C99 起） 首先讲中间那个&quot;r&quot;和&quot;w&quot;，在定义中是mode，大概也可以猜到了，就是访问文件的模式 那么模式有哪几种呢？ 文件访问模式字符串 含义 解释 若文件已存在的动作 若文件不存在的动作 “r” 读 打开文件以读取 从头读 打开失败 “w” 写 创建文件以写入 销毁内容 创建新文件 “a” 后附 后附到文件 写到结尾 创建新文件 “r+” 读扩展 打开文件以读/写 从头读 错误 “w+” 写扩展 创建文件以读/写 销毁内容 创建新文件 “a+” 后附扩展 打开文件以读/写 写到结尾 创建新文件 （上述表格和定义来自cppreference.com，原文地址） freopen可以被理解为重定向输入输出流，换句话说，这个函数会帮你把输入流和输出流重新指向某些文件，以某种模式进行读入和输出 注意！在使用freopen的&quot;r&quot;或&quot;r+&quot;模式时，请确保相关文件存在，否则会造成读入空字符串或者一些其他玄学的东西 注意！在使用freopen的&quot;w&quot;或&quot;w+&quot;模式时，如果文件已存在会销毁文件 最后还有一个参数stream，这个就是指流。一般来说就只有stdin（输入流，控制输入）和stdout（输出流，控制输出）两种 我们平常写完代码运行之后的黑底白字的窗口叫做控制台，也就是Console 在游戏中读写存档那么，又有一个问题了，比如我想做一个游戏，然后存档用freopen读写，那么怎么办呢？ 你可能会说，这还不简单 （下面仅仅是一个实例代码，其中的score表示从存档score.txt读入，最后写入存档的分数） 12345678910111213141516#include &lt;iostream&gt;#include &lt;cstdio&gt;using namespace std;int main()&#123; int score = 0; //读入存档 freopen(&quot;score.txt&quot;,&quot;r&quot;,stdin); scanf(&quot;%d&quot;,&amp;score); //这里开始游戏 //... //游戏结束，score发生变化 freopen(&quot;score.txt&quot;,&quot;w&quot;,stdout); printf(&quot;%d&quot;,score); return 0;&#125; 看起来似乎很可行，不是吗？ 且慢，首先我们得搞清楚一个事情。前面提到过，&quot;r&quot;选项如果没有文件就会打开失败，甚至可能导致程序乱码/胡乱输入等，如果用户是第一次玩游戏，那岂不是就Bug了？ 好的，有人会说，那我就加个判断呗，弄个消息框，问用户是否需要读档 （或者可以用这篇文章和这篇文章里的许许多多中方式检测文件是否存在） （我记得也可以通过把&quot;r&quot;换成&quot;a+&quot;解决，因为上面的表说了，&quot;a+&quot;也是支持读写的） 好的，这没问题 但是，你忘了一个问题 开始游戏了以后，游戏难道不需要用户输入？一个字符都不需要？ 我不相信 但是，读档后就会从文件里读入啊 你控制台输再多字符不也没用吗… （试想一下，你的用户第一次玩游戏没问题，从第二次开始读档就无法输入） 那这个问题怎么解决呢？ 很多人会说，这还不简单，我让用户输不就完了 但是，如果你的程序最后想做成软件，有安装程序的那种，你难道让用户去安装目录里找文件？ 还有，如果游戏图形化了，图片和资源文件（比如GC Server里触发某个彩蛋会播放Something just like this，这个mp3文件肯定也要存到本地啊，一首歌又没多大，总不可能让用户听歌还卡顿吧qwq）（我又透露了什么…）也会很多啊，找一个文件也会很麻烦啊 既然上面说freopen是重定向输入输出流，定向过去肯定可以定向回到控制台吧 恭喜你，猜对了 （关于重定向到控制台的内容是我当初写游戏的时候百度了半天都没找到，最后问教练解决的） 很简单，还是freopen一行代码：freopen(&quot;CON&quot;,&quot;r&quot;,stdin);（&quot;CON&quot;表示控制台） 同样的道理，你也可以把输出流定义回来：freopen(&quot;CON&quot;,&quot;w&quot;,stdout);（重定义到控制台就不用选模式了，一般来说直接&quot;r&quot;``&quot;w&quot;就可以了） 好的，现在我们把上面的游戏代码改进一下（我懒得写文件判断，就直接&quot;a+&quot;吧，应该可以的）： 1234567891011121314151617#include &lt;iostream&gt;#include &lt;cstdio&gt;using namespace std;int main()&#123; int score = 0; //读入存档 freopen(&quot;score.txt&quot;,&quot;a+&quot;,stdin); //把&quot;r&quot;改为&quot;a+&quot;，解决无存档的问题 scanf(&quot;%d&quot;,&amp;score); freopen(&quot;CON&quot;,&quot;r&quot;,stdin); //把输入重定向回控制台，不然怎么玩游戏 //这里开始游戏 //... //游戏结束，score发生变化 freopen(&quot;score.txt&quot;,&quot;w&quot;,stdout); printf(&quot;%d&quot;,score); return 0;&#125; 好的，上面这段代码应该可以解决你的疑问了 缺陷与不足 同时读写多个文件（或者文件与控制台）很麻烦，需要不停地freopen切换来切换去，很麻烦 在我的电脑上有的时候多次freopen后会出现一些玄学的Bug，导致换行被显示为特殊字符，输出无法换行，重复在一行里从头输到尾，再从头输到尾，至今仍未找到方法解决（也有可能是我代码写得太垃圾导致的） 好的，那么，我们看一下另外一种文件输入输出的方法—fopen fopen用法与理解注：由于博主仅仅将这种用法用于游戏和工程，本部分内容可能并不准确，在某些地方的代码甚至可能出现CE或者RE，如果您发现此类情况，请在本文底部评论中说明，谢谢！ 算法竞赛中应该也有一部分人会用这种写法，相对来说复杂一些： 1234567891011121314#include &lt;iostream&gt;#include &lt;cstdio&gt;using namespace std;int main()&#123; FILE *stdin = NULL; FILE *stdout = NULL; stdin = fopen(&quot;test.in&quot;,&quot;r&quot;); stdout = fopen(&quot;test.out&quot;,&quot;w&quot;); //write your code here... fclose(stdin); fclose(stdout); return 0;&#125; （注意，上面代码中间部分的printf和scanf请参照下面方式修改） 这种方式的好处在哪里？ 好处就在，它可以同时开多个文件进行读入/输出，而且同时也不影响控制台的读入和输出！ 定义什么的，因为博主很懒，所以就省略了，自己去前面给的网站搜去~ 用法大概是这样的： 首先，你需要定义FILE *xxx = NULL;，这里的xxx相当于一个变量名，注意，这里的变量名和实际读入的文件名没有关系 然后，就可以开始进行读入了：xxx = fopen(&quot;xxx.xxx&quot;,&quot;r&quot;); 最后，别忘了关掉这个文件流，否则有可能会出现一些错误：fclose(xxx); （当然，你可以把FILE *xxx = NULL;和xxx = fopen(&quot;xxx.xxx&quot;,&quot;r&quot;);缩略写成FILE *xxx = fopen(&quot;xxx.xxx&quot;,&quot;r&quot;);） 看起还是很简单的，中间那行命令的&quot;r&quot;你肯定已经猜到了，没错，也是模式，和上面是完全一样的 （为了方便读者并且让本文变得更长，把表再放一遍） 文件访问模式字符串 含义 解释 若文件已存在的动作 若文件不存在的动作 “r” 读 打开文件以读取 从头读 打开失败 “w” 写 创建文件以写入 销毁内容 创建新文件 “a” 后附 后附到文件 写到结尾 创建新文件 “r+” 读扩展 打开文件以读/写 从头读 错误 “w+” 写扩展 创建文件以读/写 销毁内容 创建新文件 “a+” 后附扩展 打开文件以读/写 写到结尾 创建新文件 但是，使用fopen怎么读入输出呢？难道还是跟前面一样直接printf``scanf就行了？ 并没有那么简单，但是其实也不难 只需要把平常你用的printf，稍微改一下即可。比如， 1printf(&quot;Hello,world! %d&quot;,a); （a是一个int型变量） 你只需要把它改成 1fprintf(&amp;xxx,&quot;Hello,world! %d&quot;,a); （其中的xxx是指前面那个FILE *后面的所谓变量） 同理，原来的scanf就要改成： 1fscanf(&amp;xxx,&quot;%d&quot;,&amp;a); 也是一样的道理 （注：由于博主太菜了，所以目前还不知道cin``cout如何在fopen中修改成文件读入，反正fin``fout和fopen应该是没有关系的） 注意！在我的电脑上编译时，如果使用&quot;r&quot;或者&quot;r+&quot;尝试打开一个不存在的文件，会导致程序无响应 好的，我们再把上面那个“游戏模板代码”用fopen写一下： 12345678910111213141516171819#include &lt;iostream&gt;#include &lt;cstdio&gt;using namespace std;int main()&#123; int score = 0; //读入存档 FILE input; input = fopen(&quot;score.txt&quot;,&quot;a+&quot;); //把&quot;r&quot;改为&quot;a+&quot;，解决无存档的问题 fscanf(&amp;input,&quot;%d&quot;,&amp;score); //从文件中读入 fclose(input); //关掉输入流（你完全可以在代码末尾再关闭） //这里开始游戏，开始游戏后的代码里直接scanf或者printf或者cin cout即可 //... //游戏结束，score发生变化 FILE output = fopen(&quot;score.txt&quot;,&quot;w&quot;); //如果你想偷懒的话，可以直接这样简写 fprintf(&amp;output,&quot;%d&quot;,score); fclose(output); //关闭输出流 return 0;&#125; 缺陷与不足 在正常情况下，代码会比freopen多一些，但是如果需要丧心病狂地同时读入/输出一大堆东西（比如下面这堆代码），它会比freopen好得多 很容易就忘记fclose，有可能导致出现Bug 丧心病狂案例： 要求：共testa.txt``testb.txt…testj.txt10个文件，请依次从第1~10个文件中读入test1``test2…test1010个int型变量，再从控制台中读入test0这个int型变量，然后分别将test1``test2…test10输出到testb.txt``testc.txt…testa.txt，最后将这11个变量之和（保证在int范围内）输出到控制台，保证所有文件全部存在且文件中没有其他内容 fopen版： 12345678910111213141516171819202122232425262728293031323334353637383940#include &lt;iostream&gt;#include &lt;cstdio&gt;using namespace std;int main()&#123; int test0,test1,test2,test3,test4,test5,test6,test7,test8,test9,test10; FILE *a,*b,*c,*d,*e,*f,*g,*h,*i,*j;//十个文件 a = fopen(&quot;testa.txt&quot;,&quot;r+&quot;); b = fopen(&quot;testb.txt&quot;,&quot;r+&quot;); c = fopen(&quot;testc.txt&quot;,&quot;r+&quot;); d = fopen(&quot;testd.txt&quot;,&quot;r+&quot;); e = fopen(&quot;teste.txt&quot;,&quot;r+&quot;); f = fopen(&quot;testf.txt&quot;,&quot;r+&quot;); g = fopen(&quot;testg.txt&quot;,&quot;r+&quot;); h = fopen(&quot;testh.txt&quot;,&quot;r+&quot;); i = fopen(&quot;testi.txt&quot;,&quot;r+&quot;); j = fopen(&quot;testj.txt&quot;,&quot;r+&quot;);//第7~17行可以缩成一行 fscanf(&amp;a,&quot;%d&quot;,&amp;test1); fscanf(&amp;b,&quot;%d&quot;,&amp;test2); fscanf(&amp;c,&quot;%d&quot;,&amp;test3); fscanf(&amp;d,&quot;%d&quot;,&amp;test4); fscanf(&amp;e,&quot;%d&quot;,&amp;test5); fscanf(&amp;f,&quot;%d&quot;,&amp;test6); fscanf(&amp;g,&quot;%d&quot;,&amp;test7); fscanf(&amp;h,&quot;%d&quot;,&amp;test8); fscanf(&amp;i,&quot;%d&quot;,&amp;test9); fscanf(&amp;j,&quot;%d&quot;,&amp;test10); scanf(&quot;%d&quot;,&amp;test0); fprintf(&amp;b,&quot;%d&quot;,test1); fprintf(&amp;c,&quot;%d&quot;,test2); fprintf(&amp;d,&quot;%d&quot;,test3); fprintf(&amp;e,&quot;%d&quot;,test4); fprintf(&amp;f,&quot;%d&quot;,test5); fprintf(&amp;g,&quot;%d&quot;,test6); fprintf(&amp;h,&quot;%d&quot;,test7); fprintf(&amp;i,&quot;%d&quot;,test8); fprintf(&amp;j,&quot;%d&quot;,test9); fprintf(&amp;a,&quot;%d&quot;,test10); printf(&quot;%d&quot;,test0+test1+test2+test3+test4+test5+test6+test7+test8+test9+test10);&#125; （40行） freopen版： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#include &lt;iostream&gt;#include &lt;cstdio&gt;using namespace std;int main()&#123; int test0,test1,test2,test3,test4,test5,test6,test7,test8,test9,test10; freopen(&quot;testa.txt&quot;,&quot;r&quot;,stdin); scanf(&quot;%d&quot;,&amp;test1); freopen(&quot;testb.txt&quot;,&quot;r&quot;,stdin); scanf(&quot;%d&quot;,&amp;test2); freopen(&quot;testc.txt&quot;,&quot;r&quot;,stdin); scanf(&quot;%d&quot;,&amp;test3); freopen(&quot;testd.txt&quot;,&quot;r&quot;,stdin); scanf(&quot;%d&quot;,&amp;test4); freopen(&quot;teste.txt&quot;,&quot;r&quot;,stdin); scanf(&quot;%d&quot;,&amp;test5); freopen(&quot;testf.txt&quot;,&quot;r&quot;,stdin); scanf(&quot;%d&quot;,&amp;test6); freopen(&quot;testg.txt&quot;,&quot;r&quot;,stdin); scanf(&quot;%d&quot;,&amp;test7); freopen(&quot;testh.txt&quot;,&quot;r&quot;,stdin); scanf(&quot;%d&quot;,&amp;test8); freopen(&quot;testi.txt&quot;,&quot;r&quot;,stdin); scanf(&quot;%d&quot;,&amp;test9); freopen(&quot;testj.txt&quot;,&quot;r&quot;,stdin); scanf(&quot;%d&quot;,&amp;test10); freopen(&quot;CON&quot;,&quot;r&quot;,stdin); scanf(&quot;%d&quot;,&amp;test0); freopen(&quot;testb.txt&quot;,&quot;w&quot;,stdout); printf(&quot;%d&quot;,&amp;test1); freopen(&quot;testc.txt&quot;,&quot;w&quot;,stdout); printf(&quot;%d&quot;,&amp;test2); freopen(&quot;testd.txt&quot;,&quot;w&quot;,stdout); printf(&quot;%d&quot;,&amp;test3); freopen(&quot;teste.txt&quot;,&quot;w&quot;,stdout); printf(&quot;%d&quot;,&amp;test4); freopen(&quot;testf.txt&quot;,&quot;w&quot;,stdout); printf(&quot;%d&quot;,&amp;test5); freopen(&quot;testg.txt&quot;,&quot;w&quot;,stdout); printf(&quot;%d&quot;,&amp;test6); freopen(&quot;testh.txt&quot;,&quot;w&quot;,stdout); printf(&quot;%d&quot;,&amp;test7); freopen(&quot;testi.txt&quot;,&quot;w&quot;,stdout); printf(&quot;%d&quot;,&amp;test8); freopen(&quot;testj.txt&quot;,&quot;w&quot;,stdout); printf(&quot;%d&quot;,&amp;test9); freopen(&quot;testa.txt&quot;,&quot;w&quot;,stdout); printf(&quot;%d&quot;,&amp;test10); freopen(&quot;CON&quot;,&quot;w&quot;,stdout); printf(&quot;%d&quot;,test0+test1+test2+test3+test4+test5+test6+test7+test8+test9+test10);&#125; （51行） 就可以很明显地看出区别了。还有，我们的fopen写法中可以把第7~17行缩略为一行写完，这样又剩10行（虽然肯定不会那么好看…） fstream 相关好吧，其实这种方法我并不知道，写这篇博文的时候查资料才发现的，大概说一下吧。具体内容请看这里和这里（前者只给出了示例，后者非常详细） 方法原理： 创建一个ofstream对象来管理输出流；（如需管理输入流，请把ofstream改为ifstream，原理参见这里） 将该对象与特定的文件关联起来； 以使用cout的方式使用该对象，唯一的区别是输出将进入文件，而不是屏幕 示例代码： 1234567891011#include &lt;iostream&gt;#include &lt;fstream&gt;//需要注意的头文件#include &lt;cstdio&gt;using namespace std;int main()&#123; ofstream fout; //声明一个ofstream对象，叫做fout fout.open(&quot;test.txt&quot;); //使用open方法将fout对象和特定的文件关联起来，也可以写作 ofstream fout(&quot;test.txt&quot;); fout(&quot;hello world!&quot;); //向文件写入 fout.close(); //关闭文件连接&#125; 这种方法就不过多叙述了qwq 总结综上，在freopen和fopen中，如果需要读入/输出的文件实在少得可怜，用freopen可能会简单一些。但如果需要在不同文件中切换操作，或者运行一遍程序可能需要多次从文件中读入或者输出到文件的，还是用fopen靠谱一些，也简短一些。 （不过我没有试过freopen和fopen哪个快，有人愿意试一下嘛…","categories":[{"name":"教程","slug":"教程","permalink":"http://code004accepted.github.io/categories/%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"基础知识","slug":"基础知识","permalink":"http://code004accepted.github.io/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"}]},{"title":"关于放学的铃声","slug":"about-the-music-after-school","date":"2019-09-04T23:00:12.000Z","updated":"2021-02-14T03:56:40.035Z","comments":true,"path":"2019/about-the-music-after-school/","link":"","permalink":"http://code004accepted.github.io/2019/about-the-music-after-school/","excerpt":"今天已经是开学的第4天了，除了1号以外，我们已经上了三天晚自习了（初三学生放学时间晚大概1.5小时，这1.5小时称作晚自习） 初一初二放学的铃声与平常下课的铃声没什么区别，就是平和温柔的音乐 初三的晚自习放学铃声可完全不一样 经过大概10mins的搜寻，我找到了这段好听的音乐：","text":"今天已经是开学的第4天了，除了1号以外，我们已经上了三天晚自习了（初三学生放学时间晚大概1.5小时，这1.5小时称作晚自习） 初一初二放学的铃声与平常下课的铃声没什么区别，就是平和温柔的音乐 初三的晚自习放学铃声可完全不一样 经过大概10mins的搜寻，我找到了这段好听的音乐： mp4 video: mp3 audio: 此音乐是Richard Clayderman（理查德·克莱德曼 法国人）的《瓦妮莎的微笑》 Hope you enjoy…","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[{"name":"学校","slug":"学校","permalink":"http://code004accepted.github.io/tags/%E5%AD%A6%E6%A0%A1/"},{"name":"音乐","slug":"音乐","permalink":"http://code004accepted.github.io/tags/%E9%9F%B3%E4%B9%90/"}]},{"title":"关于WNGMSOG","slug":"about-wngmsog","date":"2019-08-27T21:39:23.000Z","updated":"2021-02-14T03:56:40.071Z","comments":false,"path":"2019/about-wngmsog/","link":"","permalink":"http://code004accepted.github.io/2019/about-wngmsog/","excerpt":"额？WNGMSOG？这是什么东东？ Wuhan No.2 Guangya Middle School Offclass Guide 武汉二中广雅中学课后指南（其实课后是指放学后，不过没必要在意这些细节233） 课后指南是什么东东呢？ 想想，以后在您的所有设备—所有—上都有一份从二中广雅出来到你家里的… 就叫做导航吧 什么？导航？ 没错，功能可多了！ （本文其实可以说是个广告qwq）","text":"额？WNGMSOG？这是什么东东？ Wuhan No.2 Guangya Middle School Offclass Guide 武汉二中广雅中学课后指南（其实课后是指放学后，不过没必要在意这些细节233） 课后指南是什么东东呢？ 想想，以后在您的所有设备—所有—上都有一份从二中广雅出来到你家里的… 就叫做导航吧 什么？导航？ 没错，功能可多了！ （本文其实可以说是个广告qwq） 先举个栗子介绍一下，假如小明每天从学校出来以后，都要去黄浦路地铁站坐1号线到三阳路转7号线回家 那么，从晚自习放学前10分钟，此系统就自动开启（早自习~晚自习自动关闭），开始从武汉地铁官网获取当日黄浦路站列车信息（1/8号线），还会提醒是否需要快速收书包 系统知道小明今天没课，就会只查询黄浦路站1号线径河方向的班次信息，由于小明已经设置当天在街边吃饭后直接回家，就会按照日常小明的吃饭时间（比如15分钟）和小明最短走路时间（比如5分钟）算出小明能赶上的最先一班车，并把此班车的信息数据减去上面的15分钟，算出小明到地铁站的时间。还有，当小明在路上走路时，会提示道路拥堵度，从而提醒是否需要切换道路。提示如下： xxx，当前道路拥堵度为73.2%，极度拥堵。建议您切换到xxx道路，拥堵度仅为23.1% 或者 xxx，当前道路拥堵度为13.1%，几乎无人。下一段道路为xxx道路，拥堵度为50.2%，建议您在前方右拐切换到xxx道路，拥堵度仅为5.5% 如此。 当小明进入某一家餐馆并坐下吃饭时，系统通过GPS不移动得出小明在吃饭的结论，等待15分钟后自动提醒小明吃饭时间已到，由于可能小明今天想吃20分钟的饭，系统就会根据小明开始移动的时间自动算出小明吃饭所花时间并重新计算他能赶上的最先一班车并进行提醒（由于饭后不宜快走，所以会把最快速度减慢1/3），等到小明上地铁后又会自动算出到站时间，如果小明有换乘的话还会像之前一样有时间提醒。 天啊，好方便啊！ WNGMSOG仅对武汉二中广雅中学学生有效，七一华源/六中上智/武珞路等中学请不要借鉴思路，否则会被告上法庭（并且被我 氟铀碳钾 钇氧铀 铋锝氢把上面提到的元素符号串起来得到答案） WNGMSOG于2019年8月7日提出想法，现已支持： 安卓手机（于8月17日发布，仅供测试，由于学校并不允许学生携带手机故已在8月27日停止服务） AlphaPE智能电话手表（请在家长APP端应用市场下载） 将于不久（或很久）的未来支持： 小天才8代（请在家长APP端应用市场下载） 360电话手表 感谢阅读。此项目不提供下载，不开源，无截图，博主仅为项目创始人之一，并没有在项目上花太多力气，所以请不要因为此项目联系博主，本博文也不提供评论 还有，EZGY的应该没几个会用吧… 等待有人证明我错了","categories":[{"name":"项目","slug":"项目","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/"}],"tags":[{"name":"学校","slug":"学校","permalink":"http://code004accepted.github.io/tags/%E5%AD%A6%E6%A0%A1/"},{"name":"GC Server","slug":"GC-Server","permalink":"http://code004accepted.github.io/tags/GC-Server/"}]},{"title":"Hexo博客搭建—从入门到精通","slug":"how-to-build-a-hexo-blog","date":"2019-08-25T20:59:16.000Z","updated":"2021-02-14T03:56:40.103Z","comments":true,"path":"2019/how-to-build-a-hexo-blog/","link":"","permalink":"http://code004accepted.github.io/2019/how-to-build-a-hexo-blog/","excerpt":"注：本文部分内容来自ouuan的博客，原文地址 2020.02.13更新：关于Coding再次更新，已更改/增加相应内容。 我一直以来认为，要弄一个自己的博客或者网站，必须到某些什么“建站工具”里购买建站套装，再自己买一个域名 这样算下来，一年至少得两三百RMB 而且，域名什么的配置繁杂，非常麻烦 所以，一直以来我都是用的CSDN/博客园建的博客，想想SEO也做的好（SEO好就意味着你写的东西可以在百度/谷歌等搜索引擎上被别人查到），也就没什么怨言 但是，众所周知，CSDN和博客园的广告一大堆，根本不是我能容忍的 而且，无论选择什么主题，都难看得要死qwq （当然了，最近有一位dalao弄出了博客园的极致美化，请看BNDong/Cnblogs-Theme-SimpleMemory，这个其实还不错） 就在今年3月份，我才知道还有这样一个东西的存在 Hexo 这个东西可以帮你快速将您用markdown和Latex写的文章渲染为html文件，并借助Github/Coding/Gitee Pages快速发布。 说明阅读完本文后，您可以做到： 一分钱不花搭建一个美丽而简洁的博客（具体由主题决定） 拥有一个（或者多个）简短的免费顶级域名 限制您的博客仅限某些IP地址访问，或者拒绝某些IP地址访问 轻松写作/发布博客 做好百度与谷歌的SEO优化，其他搜索引擎类似 注：如果您要查看某个功能的设置，请直接点击文章左边的目录（TOC）直达 本文基于Hexo 3.9.0，文中不会提及因不同版本造成的差异（不过其实也没什么差异qwq 本文中提到的node.js和git安装仅适用于Windows，如果您使用其他系统请自行搜索下载","text":"注：本文部分内容来自ouuan的博客，原文地址 2020.02.13更新：关于Coding再次更新，已更改/增加相应内容。 我一直以来认为，要弄一个自己的博客或者网站，必须到某些什么“建站工具”里购买建站套装，再自己买一个域名 这样算下来，一年至少得两三百RMB 而且，域名什么的配置繁杂，非常麻烦 所以，一直以来我都是用的CSDN/博客园建的博客，想想SEO也做的好（SEO好就意味着你写的东西可以在百度/谷歌等搜索引擎上被别人查到），也就没什么怨言 但是，众所周知，CSDN和博客园的广告一大堆，根本不是我能容忍的 而且，无论选择什么主题，都难看得要死qwq （当然了，最近有一位dalao弄出了博客园的极致美化，请看BNDong/Cnblogs-Theme-SimpleMemory，这个其实还不错） 就在今年3月份，我才知道还有这样一个东西的存在 Hexo 这个东西可以帮你快速将您用markdown和Latex写的文章渲染为html文件，并借助Github/Coding/Gitee Pages快速发布。 说明阅读完本文后，您可以做到： 一分钱不花搭建一个美丽而简洁的博客（具体由主题决定） 拥有一个（或者多个）简短的免费顶级域名 限制您的博客仅限某些IP地址访问，或者拒绝某些IP地址访问 轻松写作/发布博客 做好百度与谷歌的SEO优化，其他搜索引擎类似 注：如果您要查看某个功能的设置，请直接点击文章左边的目录（TOC）直达 本文基于Hexo 3.9.0，文中不会提及因不同版本造成的差异（不过其实也没什么差异qwq 本文中提到的node.js和git安装仅适用于Windows，如果您使用其他系统请自行搜索下载 Github/Coding/Gitee设置首先，您需要在 Github, Coding, Gitee 中选择一个： Github：拥有最悠久的历史，最稳定，但是在国外，所以可能导致建完后您的blog访问速度慢一些 Coding：最近又各种服务更改，总之不是十分稳定，我之前绑定的域名在更换到企业版后全没了/(ㄒoㄒ)/ 搭建Pages必须手机+身份证号码认证 Gitee：后起之秀，也不错，不过搭建Pages也必须手机验证，也不是十分稳定 综上，您可以选择一个平台进行操作，也可以多个平台都操作（建议最多选择两个平台，一个国外一个国内）。如果您选择的是单个平台，请通过左边目录直达；如果您选择多个平台，请依次按照每个平台的教程进行设置。 如果求方便，推荐直接Github或者直接Coding 如果希望国内外都可以很快访问，建议Github+Coding Gitee的话，个人不太了解也没太大兴趣去研究，所以下文中并不会详细讲解qwq，欢迎自行尝试并在评论区分享 Github首先，登录或者注册一个Github账号 然后，如图所示，点击右上角的加号，选择New repository， 然后，看到如下界面： 请在我填写xxx.github.io的位置把xxx换成你自己的Github用户名 在下面的Description里，可以写也可以不写，写了也没什么用qwq 下面必须选择Public，千万不要选择Private 下面的Initialize this repository with a README请不要勾选 好的，如果看到下面的界面，说明成功了（请自行把xxx换成您的github用户名） CodingCoding原来在coding.net，但是最近它的个人版和腾讯云开发者平台合并，如果您是之前Coding的用户，请从coding个人版登录界面使用您原来的Coding账号/密码登录，并跳转至腾讯云开发者平台，切记要绑定邮箱，否则就只能使用微信登录 如果您不是Coding用户，请自行前往腾讯云注册界面使用微信/QQ/邮箱注册（需要验证手机号） 注册/登录完成后，请前往腾讯云开发者平台用户页，点击加号，选择项目，如下图： 注：Coding近期会自动帮个人用户升级为免费的企业版，请使用 https://coding.net 首页右上角注册，注册成功并登录后，按照下图类似的位置可以找到新建项目： 然后填写项目名称，就是xxx.coding.me（请自行将xxx替换为您的用户名） 注：更新后发现，在Coding中项目名称不影响效果，故可以随便填写，但为了方便区别您的blog与其它项目的repo，建议还是按xxx.coding.me来 完毕后，请点击左边列表的第二项（“代码”），如果看到下图界面，说明成功： GiteeGitee是一个很典型的后起之秀，不过流程也很简单，还可以使用Github登录。请在Gitee注册界面进行注册，在Gitee登录界面进行登录。 同上，不再过多叙述。点击右上角的加号，选择新建项目即可。 本地安装Hexo请在您的计算机中安装： Git node.js 安装路径可以根据喜好更改，最好按默认 建议node.js安装的时候选择左边的绿按钮，稳定版本更好，开发版本可能不稳定 请在cmd中使用 node -v, npm -v 和 git --version 检查是否安装成功。如果成功，应返回一行含有版本号的字符串，而不是xxx 不是内部或外部命令，也不是可运行的程序或批处理文件。，如果node或者npm不成功，请重新安装nodejs；如果git不成功，请重新安装git。 如果您已经安装Git和node.js，只是版本比较旧，您无需再次进行安装或进行更新 安装后，请从开始菜单打开Git Bash或者在任意位置右键选择Git Bash Here 输入:npm install -g hexo，可能并不能复制粘贴，请手打qwq 如果地址被墙，请自行科学上网或者输入npm install -g cnpm --registry=https://registry.npm.taobao.org切换到淘宝镜像后输入cnpm install -g hexo 等待片刻后会有一些提示和警告，可以忽略。完成后请使用hexo -v来检查是否安装成功 接着，在任意位置创建一个文件夹，名字任意，最好不要有一些奇奇怪怪的字符 这个文件夹将用于存储你的blog的所有信息，包括设置/插件/页面的markdown文件/文章的markdown文件，随着文章/页面与插件的数量增加而增加，可以占到50M~1G，请谨慎选好位置，由于文件很多，事后移动耗时很长 接下来，在你刚刚创建的文件夹里（后文称为站点目录）右键单击，选择Git Bash Here 输入命令：hexo init 等待一会，您可以看到您选择的主文件夹里多了这些文件/文件夹： node_modules scaffolds source themes _config.yml package.json 其中，node_modules是用来存放您使用npm下载的插件的，scaffolds是文章模板，您稍后创建的文章会按照模板创建，可以对模板进行修改，但这些都到一切设置完毕了以后再说吧 source用来存放您所有文章/页面的markdown代码或者HTML代码，themes用来存放您稍后下载的主题文件（默认主题landscape），_config.yml则是用来进行站点配置的，在后文中会被称为站点配置文件 package.json用来存放您下载插件的目录，平常不要修改为好 请接着输入npm install来下载一些需要的包，等待下载完毕后，请打开站点配置文件，做以下基本配置： 1234567891011121314151617# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: 博客标题subtitle: 博客副标题description: 博客描述（可以填写 xxx的博客）author: 作者language: 语言，稍后根据主题进行设置timezone: 时区，不建议设置# URL## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;url: 域名，可以暂时按照默认的 http://yoursite.com 进行设置，稍后更改root: 不用管permalink: 不用管，稍后SEO优化时会用到 如上进行部分设置后，请在站点目录中右键Git Bash Here，输入hexo s，打开浏览器，地址栏输入localhost:4000即可查看（这里的hexo s是hexo server的缩写，请在“发布博客”一章末尾详细查看） 如果4000端口冲突，请使用cmd进行taskkill /f /im 4000或者使用hexo s -p 4001修改到4001端口 如果您看到以下界面，说明成功： 请同时按下Ctrl+C来关闭窗口（若出现类似于终止批处理操作吗(Y/N)?的提示，输入y即可） 如果没有，请按照上述步骤重试 好的，接下来就是挑选主题的时候了qwq 主题选择与下载切换好的，我们来看一下hexo官网的主题列表 天啊，这么多！ 没错，慢慢挑吧qwq 当然了，也可以利用搜索功能，如果您喜欢material design，不妨搜索标签material（顺便安利一波我的主题Materialized） 推荐几个： NexT，非常火爆，人气很高 Jacman，简洁明了，加载快速 Material（最新版有Bug，请使用1.5.2而不要使用1.5.3及以上版本） Butterfly，适合游记比较多的博客，图片功能完善 Materialized，加载快速，Material化 如上，对每个主题，点击预览图片会进入预览网站，点击蓝色的主题名称会进入相应的Github repo。 若主题README中无特殊说明，请使用下面命令进行主题复制： 1git clone https://github.com/xxx/xxx themes/xxx （上面的https://github.com/xxx/xxx请替换为主题repo地址，themes/xxx的xxx请替换为主题名称） 要使用一个主题，请先打开站点配置文件，将themes: landscape改为themes: xxx（xxx为主题在themes下的目录名字，就是刚刚代码里的主题名称） 比如，我把next主题通过git clone到了themes目录下，就把站点配置文件中的themes选项改为next即可 在每个主题下都有一个_config.yml文件，它被称为主题配置文件，用来对主题进行自定义设置（注意，主题的语言设置在站点配置文件里） 好的，接下来，我以NexT主题为例，带领您领略一下主题中多样的功能 （本文基于next 7.1.2，之所以我不更新是因为7.3.0改动太大，导致很多地方不美观，7.2.0取消了自定义设置） （Update:后来看了ouuan dalao博客的评论以后发现，7.2.0及以上版本的NexT主题在主题配置文件里有一个custom_file_path选项，把里面的style取消注释并在相应的目录添加一个相应的文件，放入自定义设置的代码即可） NexT主题基础配置请打开next主题的主题配置文件，Ctrl+F搜索Scheme Settings，找到下面选项： 123456789# ---------------------------------------------------------------# Scheme Settings# ---------------------------------------------------------------# Schemesscheme: Muse#scheme: Mist#scheme: Pisces#scheme: Gemini 这里的Muse Mist Pisces Gemini可以理解为NexT的四个小主题 截图如下： Muse: Mist: Pisces: Gemini: 默认是Muse，个人推荐Gemini，Pisces和Gemini的区别就是Gemini更宽松一些，Mist也不错 如果想用Muse的话，还是先找好背景图片再说吧… 否则… PS：如果想查看自己网站的效果，可以随时保存修改然后hexo s 请继续在主题配置文件中Ctrl+F搜索powered，可以找到下面选项： 1234567891011powered: # Hexo link (Powered by Hexo). enable: true # Version info of Hexo after Hexo link (vX.X.X). version: truetheme: # Theme &amp; scheme info link (Theme - NexT.scheme). enable: true # Version info of NexT after scheme info (vX.X.X). version: true 这会让博客生成后底部存在“由Hexo强力驱动 V3.9.0”和“主题：NexT V7.1.2”（文字我不太记得清楚了qwq） 如果您想给hexo或者next主题打广告，请跳过此段 如果您想博客底部干净整洁，请把上面片段中所有true改成false（theme.enable选项必须保持true） 安全警告：根据NexT主题的LICENSE，您应该确保theme.enable选项打开，NexT主题LICENSE原文节选如下： 12345c) A covered work must retain «NexT» official website link (https://theme-next.org) in footer section of every website created, modified or manipulated by using «NexT». «NexT» theme configuration must be:footer: theme: enable: true 接下来，请继续在主题配置文件中找到以下内容（请自行Ctrl+F搜索） 1234567891011121314151617181920212223# ---------------------------------------------------------------# Menu Settings# ---------------------------------------------------------------# When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash from link value (/archives -&gt; archives).# Usage: `Key: /link/ || icon`# Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-senstive.# Value before `||` delimeter is the target link.# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.# External url should start with http:// or https://menu: home: / || home #about: /about/ || user categories: /categories/ || th tags: /tags/ || tags archives: /archives/ || archive links: /links/ || link message: /message/ || comments following: /following/ || group codes: /codes/ || file-code-o #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbeat 这里就是主菜单设置了，也就是Muse中间的，Mist上面的，Pisces和Gemini左边/右边的菜单 格式很简单，可以写成这样：&#123;name&#125;: &#123;link&#125; || &#123;icon&#125; &#123;name&#125;是指显示在菜单中的名称，比如categories和tags，就是分类和标签 注意：分类和标签页面需要自己创建： 12hexo new page tagshexo new page categories 随后在source/tags/index.md中front-matter里输入： 1type: tags 注：某些主题也可能是layout: tags，根据主题决定。 分类界面也是如此，把tags改成categories即可。 回到菜单设置，&#123;link&#125;是指链接地址，可以为两种形式： 链接到某个网站：http://xxx.com 或者 https://xxx.com 注意！链接到某个网站请不要直接输入域名（baidu.com），请务必输入 http://baidu.com 或者 https://baidu.com 博客的子链接：/xxx/ （xxx是指页面的名称，在后文会提到） &#123;icon&#125;是指图标名称，请在Font Awesome查找，查找方式如下： 比如我想菜单里有第二行第一个图标（那个黑白半圆的），只需要把上面的&#123;icon&#125;替换为adjust即可 这下面还有这个设置： 1234# Enable / Disable menu icons / item badges.menu_settings: icons: true badges: false 这个基本上不用管，如果你真的不想在菜单里显示图标，请把icons设置为false 好的，接下来请找到下面的侧边栏设置： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104# ---------------------------------------------------------------# Sidebar Settings# See: https://theme-next.org/docs/theme-settings/sidebar# ---------------------------------------------------------------# Posts / Categories / Tags in sidebar.site_state: true# Social Links# Usage: `Key: permalink || icon`# Key is the link label showing to end users.# Value before `||` delimeter is the target permalink.# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.social: GitHub: https://github.com/code004Accepted || github E-Mail: mailto:code004@qq.com || envelope Google: https://plus.google.com/code004Accepted || google Twitter: https://twitter.com/brianchen2006 || twitter YouTube: https://youtube.com/code004Accepted || youtube Instagram: https://instagram.com/brianchen2019 || instagram Skype: skype:code004?call|chat || skype Codepen: https://codepen.io/code004Accepted/ || codepen Ask.fm: https://ask.fm/code004 || question LGOJ: https://www.luogu.org/space/show?uid=228062 || codesocial_icons: enable: true icons_only: false transition: false# Blog rollslinks_icon: linklinks_title: 友情链接links_layout: block#links_layout: inlinelinks: # Standred C++: https://isocpp.org # Cloudflare: https://cloudflare.com # Python: https://www.python.org# Sidebar Avataravatar: # In theme directory (source/images): /images/avatar.gif # In site directory (source/uploads): /uploads/avatar.gif # You can also use other linking images. url: /images/avatar.jpg # If true, the avatar would be dispalyed in circle. rounded: true # The value of opacity should be choose from 0 to 1 to set the opacity of the avatar. opacity: 1 # If true, the avatar would be rotated with the cursor. rotated: true# Table Of Contents in the Sidebartoc: enable: true # Automatically add list number to toc. number: true # If true, all words will placed on next lines if header width longer then sidebar width. wrap: false # If true, all level of TOC in a post will be displayed, rather than the activated part of it. expand_all: false # Maximum heading depth of generated toc. You can set it in one post through `toc_max_depth` in Front-matter. max_depth: 6sidebar: # Sidebar Position, available values: left | right (only for Pisces | Gemini). position: left #position: right # Manual define the sidebar width. If commented, will be default for: # Muse | Mist: 320 # Pisces | Gemini: 240 #width: 300 # Sidebar Display, available values (only for Muse | Mist): # - post expand on posts automatically. Default. # - always expand for all pages automatically. # - hide expand only when click on the sidebar toggle icon. # - remove totally remove sidebar including sidebar toggle. display: post # Sidebar offset from top menubar in pixels (only for Pisces | Gemini). offset: 12 # Enable sidebar on narrow view (only for Muse | Mist). onmobile: false # Click any blank part of the page to close sidebar (only for Muse | Mist). dimmer: falseback2top: enable: true # Back to top in sidebar. sidebar: true # Scroll percent label in b2t button. scrollpercent: true# A button to open designated chat widget in sidebar.# Firstly, you need enable the chat service you want to activate its sidebar button.chat: enable: false #service: chatra #service: tidio icon: comment # icon in Font Awesome 4, set false to disable icon text: Chat # button text, change it as you wish 如图所示，site_state就是在侧边栏中显示您博客的文章（日志）数量/分类数量/标签数量，就是上图的1 social以及它下面的许许多多的选项就是图中的2，图标同样可以修改 而底下的links则是友情链接设置，由于友情链接太多所以我单独开了一个页面来放，各位可能看不到侧边栏友情链接的效果qwq 欢迎前往其他人的blog查看 注意到，友情链接里有links_layout选项，给出了两种设置：block与inline 说直白点，block就是一行一个，每个居中；inline就是一行多个，把每行都尽可能填满，居中 接下来的avatar设置就是侧边栏头像，请将头像放到next主题目录下的source/images文件夹中，然后输入/images/avatar.jpg（avatar.jpg是文件名，可随意修改） 当然了，按照配置文件的说明，您也可以放到站点目录下的source/images文件夹中，然后输入/uploads/avatar.jpg，不过我并不推荐这种方式，我也并未尝试过，所以还是请使用上面一种方式 注意到，关于侧边栏头像的还有几个设置： 123rounded: trueopacity: 1rotated: true 其中，rounded是指是否让头像呈圆形（就是以正方形头像的对角线交点为原点，正方形边长的一半为半径，画出来一个圆，只有圆内的头像会显示出来 哎呀怎么这么复杂），opacity是指头像的不透明度（注意不是透明度），设置为1表示完全不透明，建议0.9~1，rotated表示头像是否随鼠标旋转（就是鼠标移上去的时候头像是否转），rotated设置为true以后，鼠标移上头像就会顺时针旋转一整圈（360°），鼠标移下来就会逆时针转回去 下面可以找到toc的设置，这个设置的作用是浏览文章时可以通过侧边栏的目录直达某一个大标题或者一个小标题（不就是目录吗… toc的选项： 1234number: truewrap: falseexpand_all: falsemax_depth: 6 解释一下，number是指自动为标题加上编号，比如会有3的大标题编号，3下面的小标题就自然命名为3.1，3.2，更小的就是3.1.1… 可以根据个人喜好设置 wrap开启后，当标题长度大于侧边栏长度时，自动换行，不推荐 expand_all是指自动展开所有标题 当expand_all设置为false时，不自动展开标题，换句话说就是当你点到1的大标题时才会展开1.1 1.2这些小标题，当你点击1.2时才会再显示1.2.1 1.2.2之类的更小的标题 但是，一旦expand_all被打开，你的所有文章的所有标题都会直接被显示出来，会很乱，不过也可以根据个人喜好吧qwq max_depth表示标题探索深度，Markdown只有6层标题，所以最多设置为6，如果你只想让目录显示1/2/3级的大标题，输入3即可，不推荐更改 好的，底下有一长串的侧边栏位置设置，如下： 1234567891011121314151617181920212223sidebar: # Sidebar Position, available values: left | right (only for Pisces | Gemini). position: left #position: right # Manual define the sidebar width. If commented, will be default for: # Muse | Mist: 320 # Pisces | Gemini: 240 #width: 300 # Sidebar Display, available values (only for Muse | Mist): # - post expand on posts automatically. Default. # - always expand for all pages automatically. # - hide expand only when click on the sidebar toggle icon. # - remove totally remove sidebar including sidebar toggle. display: post # Sidebar offset from top menubar in pixels (only for Pisces | Gemini). offset: 12 # Enable sidebar on narrow view (only for Muse | Mist). onmobile: false # Click any blank part of the page to close sidebar (only for Muse | Mist). dimmer: false 首先有个position的设置，意思是侧边栏是在左边还是右边，只对Pisces和Gemini两个小主题有效 然后底下有个被加注释的width设置，就是手动设置侧边栏宽度，极度不推荐（除非你有特别长的介绍/友链/文章标题…） 有一个display设置，这个设置只对Muse和Mist有效，有四个设置值： post 当打开文章界面的时候，侧边栏自动弹出，但在首页/分类页/归档页等不会自动弹出，需手动点击按钮展开 always 在所有页面自动弹出 hide 在所有页面都不弹出，只在点击按钮时展开 remove 连按钮都不显示，完整地删除侧边栏 个人建议post或者always，按个人喜好选择 接下来有一个offset的设置，这个是指头像到侧边栏顶部的距离，默认即可，只对Pisces和Gemini有效 然后有一个onmobile的设置，只对Muse和Mist有效，是指在手机或者很窄的浏览器中也显示侧边栏，不建议开启 最后一个dimmer的设置，也只对Muse和Mist有效，是指打开侧边栏后点击页面任意位置关闭侧边栏，建议开启 好的，继续看侧边栏的设置： 123456789101112131415back2top: enable: true # Back to top in sidebar. sidebar: true # Scroll percent label in b2t button. scrollpercent: true# A button to open designated chat widget in sidebar.# Firstly, you need enable the chat service you want to activate its sidebar button.chat: enable: false #service: chatra #service: tidio icon: comment # icon in Font Awesome 4, set false to disable icon text: Chat # button text, change it as you wish 一共是back2top和chat两个设置，back2top是指侧边栏底部的回到顶部按钮，建议开启，scrollpercent是指在按钮旁边显示页面已经阅读百分之多少，详见上面图片里的4 chat是在侧边栏的聊天按钮设置，建议不要开启，设置麻烦，而且Bug很多，会导致博客加载很慢 好的，侧边栏设置到此结束，现在基本上你已经配置好NexT主题的界面了，不过…你的网站还是本地的！先讲一下pages搭建，再继续谈NexT和其它主题的配置及高级优化吧qwq 测试发布博客现在，你应该还什么文章都没写吧qwq 不过在之前的hexo s的时候可以看到，你的博客里已经有一篇Hello World的文章了！这是Hexo帮你写的，里面也有一些教你写文章的说明，这个等会在解释 现在最重要的是，怎么发布你的博客… 你总不可能让你的朋友们都来你的电脑上才能看到博客吧！ 好的，废话不多说，我们来先讲一下怎么把你的博客发布到Github/Coding/Gitee 为了把本地仓库的内容传送到GitHub上，需要配置ssh key，你可以把ssh key理解为一个身份验证码，在你把你的博客或者其他内容传送到Github上时，你需要进行身份验证。无论是你的博客还是其他代码仓库都是如此（不然别人就可以随便瞎改你的代码仓库了） 在Git Bash中输入：ssh-keygen -t rsa -C &#123;email&#125;，请把&#123;email&#125;替换为你注册Github所用的邮箱 直接按下三次Enter键默认即可，会把ssh key存到C:\\Users\\Administrator\\.ssh里，如果你的计算机用户名不是Administrator，也不用担心，Git会帮你把一切办好 好的，ssh密钥生成成功，请打开上面的地址C:\\Users\\Administrator\\.ssh，里面有一个id_rsa.pub文件，这就是你的ssh key的公钥了（不懂公钥请忽略） 右键使用记事本或者你的文本编辑器打开，复制里面的内容，回到Github/Coding/Gitee并登录 下面的设置差不多，就只讲Github的 在Github中点击自己头像，选择Settings，然后选择左边的SSH and GPG keys，点击右上角的绿色按钮New SSH key会看到这个界面： 请把刚刚复制的密钥粘贴到Key框中，Title可以随便写，好像不写也可以，然后点击绿色按钮Add SSH key 接下来，需要在本地验证一下是否成功，在Git Bash中输入ssh -T git@github.com，如果提示Hi &#123;username&#125;! You&#39;ve successfully authenticated, but GitHub does not provide shell access.就说明SSH配置成功，&#123;username&#125;应该是你的Github用户名 这里说一下，如果是Coding要验证，请在Git Bash中输入ssh -T git@e.coding.net，如果提示： 1Coding 提示: Hello &#123;username&#125;, You&#x27;ve connected to Coding.net via SSH. This is a personal key. &#123;username&#125;，你好，你已经通过 SSH 协议认证 Coding.net 服务，这是一个个人公钥 说明SSH配置成功，&#123;username&#125;应该是你的Coding用户名 Gitee也是同样的道理，ssh -T git@gitee.com即可 接下来，我们需要安装一个帮助我们把blog发布到Git仓库的包： 1npm install hexo-deployer-git --save （如果您配置了cnpm也可以将npm改为cnpm） 好的，现在你已经能正常连接到Github/Coding/Gitee了，请打开站点配置文件，复制并粘贴到文件末尾（如果已经有类似设置请覆盖）： 123456# Deployment## Docs: http://hexo.io/docs/deployment.htmldeploy:- type: git repo: github: git@github.com:&#123;username&#125;/&#123;username&#125;.github.io.git （如果文件本身就有这项设置，请先删除原来的空白设置） 注意： 1. 不知道为什么，好像用git@git.coding.net部署Coding会报错，所以请用https连接 （Coding再次改版后已不再出现类似错误） 之前选择了多个平台的，依次往下写即可，比如： 1234567# Deployment## Docs: http://hexo.io/docs/deployment.htmldeploy:- type: git repo: github: git@github.com:&#123;username&#125;/&#123;username&#125;.github.io.git coding: git@e.coding.net:&#123;username&#125;/&#123;username&#125;.coding.me.git 请注意，不要直接复制代码就开干，请把&#123;username&#125;替换过来！ 千万注意：github:后面要有一个空格，你继续写的也是一样，否则会出现错误 Github那行的所有&#123;username&#125;换成你的Github用户名，Coding那行的所有&#123;username&#125;换成你的Coding用户名，Gitee的请自己百度或者直接在项目地址选择克隆/下载然后复制里面给的连接 好的，请记得要保存站点配置文件，可以开始发布了 （温馨提示：以后在发布前建议先使用hexo s检查界面是否有Bug或者Markdown是否崩了等等） PS：在发布之前请先执行： 12git config --global user.name &quot;(Username)&quot;git config --global user.email &quot;(Email)&quot; username和email可以采用Github/Coding注册的用户名和邮箱 发布指令（在Git Bash中执行）： 1hexo cl &amp;&amp; hexo g &amp;&amp; hexo d 等待数十秒甚至几分钟（取决于网速）后，如果您看到：INFO Deploy done: git 恭喜！成功了！ 如果出现一大堆什么 at xxx.xxx 之类的，说明可能由于主题配置或者站点配置问题，导致某些设置无法被识别，从而出现错误，记住，所有在两个配置文件中的设置，形如xxx: xxx的必须在冒号后打一个空格！（当然了，如果hexo s无错误，但发布时出错，说明肯定是你发布的配置有问题，比如把github打成guthub之类的低级拼写错误） 这时候，应该可以通过访问 http://xxx.github.io （请自行将xxx换成您的Github用户名）或者 http://xxx.coding.me （请自行将xxx换成您的Coding用户名）等等来查看您的博客了qwq（如果提示404 There isn&#39;t a GitHub Pages site here.等，请进入相应的repo，选择Settings，在Github Pages中选择master分支即可） 更新：由于Coding再次更新，请忽略上文中的xxx.coding.me地址。请在Coding中相应的代码仓库的静态Pages页面查看 备注： hexo s是hexo server的缩写，在本地预览站点 hexo cl是hexo clean的缩写，删除上次生成的站点HTML文件 hexo g是hexo generate的缩写，生成站点HTML文件 hexo d是hexo deploy的缩写，把生成的站点HTML文件发布到git仓库中（或者还有别的发布方式） 注意：hexo clean不能缩写为hexo c，因为存在命令hexo config 书写并发布博客前面已经讲了博客的配置/发布了，现在讲一下如何在Hexo里写一篇博客 在站点目录中右键，选择Git Bash Here，输入命令hexo new xxx（请把xxx替换为您的文章URL，可以用中文，含有空格可能会出错） 举个例子：hexo new fuck就是生成一篇URL为fuck的文章，编辑并发布后，您可以在&#123;你的网址&#125;/fuck访问到这篇文章。文章标题可以稍后修改 也可以hexo new 你好！，稍后可以在&#123;你的网址&#125;/你好！访问。但是，不能用hexo new hello world，必须hexo new hello-world或者hexo new helloworld都可以 好的，假设我们刚刚执行的是hexo new test，待命令执行成功后，你应该可以在你的站点目录里找到一个名叫source的文件夹，打开它，你应该可以看到一个名叫_posts的文件夹，打开它，可以看到test.md（test就是前面所说的URL，也是你之前填的那个xxx） 这就是这篇博文的Markdown源代码了，你可以随意地修改它，基本上所有常用的Markdown语法都能解析，但是Latex暂时不能，这一步等会再配置 如果您平常经常写代码，您肯定会喜欢使用VS Code作为您的Markdown编辑器，VS Code支持几乎所有语言代码的高亮；如果您很少写代码，只是平常写一些文章，您或许会更加喜欢Typora Typora是什么呢？ 一个轻便但高级的Markdown编辑器 尽管体积很小，但是支持图片/标题/表格/清单/代码块/图标/表情/高亮…，让你可以专注于你所写的内容。Typora还可以自动帮你实时生成文章的TOC，还可以实时字数统计，自动配对括号，甚至可以方便地导出为PDF/HTML/DOC等，也可以从这些类型地文档导入。 官网地址：https://www.typora.io/ 好的，打了这么久广告，让我们回归正题。 按理说，你打开你新建完的markdown文件，会看到下面的一个模板： 123456---title: testdate: xxxx-xx-xx xx:xx:xxtags:--- 好的，title:后面就是这篇文章的标题了，注意冒号是英文的，和文章名之间必须有一个空格，否则后面生成的时候会报错 date:后面是文章创作的时间，这个时间会由系统自动设置为你在Git Bash里创建这篇文章的时间，一般来说不用修改，我曾经舍不得删一篇没用的测试文章，就把它的日期改成了0100-01-01 00:00:00，然后我发现年份必须在0100之后，否则好像会出一些Bug tags:后面是这篇文章的标签，请按照以下格式书写： 1234tags: # 注意，冒号后面最好加一个空格 - 标签1 - 标签2 - 标签3 当然了，如果你这篇文章只有一个标签，也可以用tags: [标签1]进行书写 很明显，这些设置是不够的，我们可以加上categories的设置，也就是分类： 123456789---title: testdate: xxxx-xx-xx xx:xx:xxtags: - 标签1 - 标签2 - 标签3categories: [分类]--- 注：Hexo不支持多个并列分类，只支持父子分类，但有些主题（比如我的主题Materialized）可以支持。在大多数主题（比如NexT）中，一篇文章使用多个category会导致后面的分类成为后面的分类成为前面分类的子分类，比如： 123categories: - 分类1 - 分类2 会导致分类2成为分类1的子分类，而不是并列分类。 但是，在像Materialized的少数主题中，会把上面的语法当成并列分类显示。Theme-Materialized: https://github.com/theme-materialized/hexo-theme-materialized 好的。你已经完成了基本的文章设置操作，可以开始尽情地使用Markdown写文章啦~ 写完了以后，保存，回到Git Bash，输入hexo cl &amp;&amp; hexo g &amp;&amp; hexo d并静待完成即可。然后，你就可以在你的网站上愉快地查看你的博客了！ 备注（如果你是一步步跟着来的，不用看了，“尝试发布博客”那章有了）： hexo s是hexo server的缩写，在本地预览站点 hexo cl是hexo clean的缩写，删除上次生成的站点HTML文件 hexo g是hexo generate的缩写，生成站点HTML文件 hexo d是hexo deploy的缩写，把生成的站点HTML文件发布到git仓库中（或者还有别的发布方式） 注意：hexo clean不能缩写为hexo c，因为存在命令hexo config NexT主题高级美化暂时咕咕qwq 注：由于博主较为忙碌，本文更新极为缓慢，更多请访问ouuan的博客相关文章 https://ouuan.github.io/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8C%97","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[{"name":"搭建","slug":"搭建","permalink":"http://code004accepted.github.io/tags/%E6%90%AD%E5%BB%BA/"},{"name":"博客","slug":"博客","permalink":"http://code004accepted.github.io/tags/%E5%8D%9A%E5%AE%A2/"}]},{"title":"蜘蛛侠将离开漫威宇宙","slug":"spiderman-leave-mcu","date":"2019-08-21T23:24:12.000Z","updated":"2021-02-14T03:56:40.151Z","comments":true,"path":"2019/spiderman-leave-mcu/","link":"","permalink":"http://code004accepted.github.io/2019/spiderman-leave-mcu/","excerpt":"今日下午传来一个震惊的消息… 蜘蛛侠由于索尼和迪士尼的争执将离开漫威宇宙 起因是这样的，原来对于蜘蛛侠的电影，一部分由迪士尼拿全部利润，另一部分迪士尼拿1%的利润，99%的利润归索尼 结果，迪士尼不满意，想要在“另一部分”电影中也拿50%利润，索尼不干了，就把蜘蛛侠给收回来了 登上Twitter一看，一片哀嚎之声，一个投票（24:00截止的），我看的时候已经是23:15左右了，问蜘蛛侠属于哪里 123A. 属于索尼(6%)B. 不好说(7%)C. 属于漫威(87%) （数字不一定完全准确，反正选C的基本上有90%） 不得不说，荷兰弟（好吧，我第一次这么称呼他，后面我们还是叫他Tom吧）还是很有吸引力的qwq 天啊qwq 730K people are Tweeting about this，实时就有73万人在发与此相关消息！还没算那些忘了打Tag的（比如我）！","text":"今日下午传来一个震惊的消息… 蜘蛛侠由于索尼和迪士尼的争执将离开漫威宇宙 起因是这样的，原来对于蜘蛛侠的电影，一部分由迪士尼拿全部利润，另一部分迪士尼拿1%的利润，99%的利润归索尼 结果，迪士尼不满意，想要在“另一部分”电影中也拿50%利润，索尼不干了，就把蜘蛛侠给收回来了 登上Twitter一看，一片哀嚎之声，一个投票（24:00截止的），我看的时候已经是23:15左右了，问蜘蛛侠属于哪里 123A. 属于索尼(6%)B. 不好说(7%)C. 属于漫威(87%) （数字不一定完全准确，反正选C的基本上有90%） 不得不说，荷兰弟（好吧，我第一次这么称呼他，后面我们还是叫他Tom吧）还是很有吸引力的qwq 天啊qwq 730K people are Tweeting about this，实时就有73万人在发与此相关消息！还没算那些忘了打Tag的（比如我）！ #SpiderManFarFromTheMCU是热搜话题，#SaveSpidey是热搜话题，#SaveSpidermanFromSony也是热搜话题，还有个一般搜索话题#SpidermanBelongsInTheMCU 好的，我们再来看一些小小的投票（可能参加投票的人很少，因为我是在0点之后截的图，都是0点之后的投票，可能只发出来了10分钟，但是至少肯定有十几个或者几十个人参与的） OMG，这完全是一边倒啊qwq （前面说到的那个投票忘了截qwq） 不管怎样，希望该死的Sony能马上停止，希望Tom再次出现在MCU的电影中。你呢？ PS:可以在Twitter上看到许多骂Sony的，还有人做出来了一个Fuck you 3000的图片，我也真的是服了qwq PPS:可以很轻松的发现，这个帖子就是全站戒备的原因qwq Update 2019.8.22 9:24:08 早上又去Twitter上看了一下，昨晚是我太偏激了。细细回想，其实是Disney的fault。 大家全部认同Spider-Man应该在漫威，但是这一切是Disney追求利益的后果，不应该完全怪Sony，反而更多是Disney的错 附上昨天那两个投票现在的截图（现在的结果基本上就完全公正了qwq）","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[{"name":"娱乐","slug":"娱乐","permalink":"http://code004accepted.github.io/tags/%E5%A8%B1%E4%B9%90/"}]},{"title":"关于《CCF关于暂停NOIP竞赛的公告》","slug":"hack-noi-website","date":"2019-08-21T18:01:47.000Z","updated":"2021-02-14T03:56:40.095Z","comments":true,"path":"2019/hack-noi-website/","link":"","permalink":"http://code004accepted.github.io/2019/hack-noi-website/","excerpt":"本文仅供娱乐，请不要断章取义 查看后文前请务必保证您同意下面的协议： 12341. 如果我是NOI/CCF相关工作人员，我保证我不会查看本文的任何内容，并且我保证我不会以任何方式告诉我的同事直接或间接地查看本文，我已知晓本文作者（即博主）不承担本文所造成的任何后果与责任；2. 如果我不是NOI/CCF相关工作人员，我保证我不会以任何方式直接或间接地告知NOI/CCF及相关组织来查看本站/本博文；3. 博主（即本文作者）不因为本文所涉及的相关内容承担任何责任，包括法律责任及禁赛等处罚。4. 如果我不同意上述协议或我不完全知晓上述内容，我应立即关掉此网页，不再以任何方式直接或间接地浏览本站/本博文。 警告：如果您不同意上述协议或不完全知晓上述内容，请立即关闭此网页！！！ 12345678910111213141516最初，没有人在意这场灾难这不过是一次机惨一场模考一个蒟蒻的死亡一次神犇的AK直到每个选手被迫退役NOIP规模正在急速变大 持续膨胀2018年后，NOIP人数将持续上升2019年后，NOIP存在死亡的可能面对这场灭顶之灾 OIER表现出前所未有的团结为了让更多的人参加竞赛CCF决定将整个NOIP除名提出一个新的比赛名字这一恢弘而漫长的NOIP难民迁出计划被命名为“流浪信奥”计划 知乎上的相关问题","text":"本文仅供娱乐，请不要断章取义 查看后文前请务必保证您同意下面的协议： 12341. 如果我是NOI/CCF相关工作人员，我保证我不会查看本文的任何内容，并且我保证我不会以任何方式告诉我的同事直接或间接地查看本文，我已知晓本文作者（即博主）不承担本文所造成的任何后果与责任；2. 如果我不是NOI/CCF相关工作人员，我保证我不会以任何方式直接或间接地告知NOI/CCF及相关组织来查看本站/本博文；3. 博主（即本文作者）不因为本文所涉及的相关内容承担任何责任，包括法律责任及禁赛等处罚。4. 如果我不同意上述协议或我不完全知晓上述内容，我应立即关掉此网页，不再以任何方式直接或间接地浏览本站/本博文。 警告：如果您不同意上述协议或不完全知晓上述内容，请立即关闭此网页！！！ 12345678910111213141516最初，没有人在意这场灾难这不过是一次机惨一场模考一个蒟蒻的死亡一次神犇的AK直到每个选手被迫退役NOIP规模正在急速变大 持续膨胀2018年后，NOIP人数将持续上升2019年后，NOIP存在死亡的可能面对这场灭顶之灾 OIER表现出前所未有的团结为了让更多的人参加竞赛CCF决定将整个NOIP除名提出一个新的比赛名字这一恢弘而漫长的NOIP难民迁出计划被命名为“流浪信奥”计划 知乎上的相关问题 在感叹&amp;嘲讽&amp;瞎搞之后，OIer们开始愤怒了… 于是，各种dalao刷NOI官网那份公告流量的程序纷纷诞生 感觉过不了多久，取消NOIP保送 中国计算机学会(CCF)网站被黑和中国计算机学会 CCF/NOI 网站再次被黑的历史就会重演qwq （看了第二个链接，有没有种想拜他为师的感觉） 蒟蒻我呢，关于Python的啥都不会，只会一点HTML/JS/CSS，于是百度了一下，学着写了一份不断刷新的HTML，代码如下： 12345678910&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0.5&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;iframe frameborder=1 width=100% height=800px marginheight=0 marginwidth=0 scrolling=yes src=http://www.noi.cn/newsview.html?id=932&amp;hash=72F731&amp;type=1&gt;&lt;/iframe&gt; &lt;/body&gt;&lt;/html&gt; （请另存为xxx.html并在浏览器中打开） 效果：打开上面的网页后可以看到NOI官网中的那份公告加载，但是这不是链接到了NOI官网，而是相当于在网页中加载了一个其他网站的控件(iframe)，然后这个网页不断刷新自己，等于刷新了NOI官网 刷新时间间隔在上面代码的&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0.5&quot;&gt;里可以调。这里主要是控制这个网页自动刷新的，只需要把content=&quot;0.5&quot;中的0.5换掉即可，填0.5就意味着0.5s一刷，填1就意味着1s一刷，填0.1就意味着0.1s一刷（等于1s十刷） 但是，由于NOI官网经常很慢，所以就算你设置0.1也不一定就真的1s十刷，因为在上面的代码里，除非官网无法加载（就是相当于你浏览器都给了什么拒绝访问的提示的那种）或者加载完成，刷新任务都不会启动。换句话说，除非NOI官网崩了或者你的IP被NOI官网禁了，都必须等到控件中NOI官网基本上加载完了才能刷新 原则上如果你设置为0.05及以下，你的电脑就不用动了，基本上就卡死了，鼠标动一下就未响应，这种情况只能通过强制重启解决 所以一般来说，推荐0.5就可以了，最快也就0.3，最慢的话，1.0~1.5为好。 此外，还有两个dalao编的用来刷流量的exe程序，可以在下面两个线路任选其一下载（国内推荐Coding，国外推荐Github） Coding 线路：shua-new.exe 与 VisitCounterPP.exe Github 线路：shua-new.exe 与 VisitCounterPP.exe 我自己把上述代码加了一点温馨提示，弄了个域名，可以在hacknoi.ml访问，与上述原理相同，也提供了两个exe的下载链接 我自己host的网页是0.5s一刷的，这样也可以避免NOI官网对IP进行拦截/屏蔽（刷的太快了以后很容易被屏蔽30min~1h） PS：我还把某位dalao做的游戏“膜拜Siyuan”改了一个刷新公告版，可以去这里进行游戏，与原版Siyuan(0.6.4版本)的导入导出是兼容的。修改很简略，dalao不喜勿喷，欢迎PR到code004Accepted/CCFnotice加入开发。如果原版的Siyuan更新了，也请务必在下面留言或者开Issue提醒我，感谢qwq 结尾再给出一张图，求CCF不要禁赛qwq UPDATE 20191122 hacknoi.ml 及其系列网址 hack17.ml hackcsp.ml sendbaidu.ml 均已被删除，域名已注销，不再接受同类请求","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[{"name":"娱乐","slug":"娱乐","permalink":"http://code004accepted.github.io/tags/%E5%A8%B1%E4%B9%90/"}]},{"title":"LGOJ上的神贴——《关于平衡树》","slug":"a-god-post-on-lgoj","date":"2019-08-20T21:05:29.000Z","updated":"2021-02-14T03:56:40.031Z","comments":true,"path":"2019/a-god-post-on-lgoj/","link":"","permalink":"http://code004accepted.github.io/2019/a-god-post-on-lgoj/","excerpt":"原帖地址：https://www.luogu.org/discuss/show/137272 可以通过 https://www.luogu.org/discuss/show/137272?page={pagenum} 来直接前往第{pagenum}页 截图如下（1~67页），传到了路过图床（sm.ms一次只能上传10张qwq），加载可能很慢，可能很卡，请谅解qwq","text":"原帖地址：https://www.luogu.org/discuss/show/137272 可以通过 https://www.luogu.org/discuss/show/137272?page={pagenum} 来直接前往第{pagenum}页 截图如下（1~67页），传到了路过图床（sm.ms一次只能上传10张qwq），加载可能很慢，可能很卡，请谅解qwq","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[{"name":"娱乐","slug":"娱乐","permalink":"http://code004accepted.github.io/tags/%E5%A8%B1%E4%B9%90/"},{"name":"纪念","slug":"纪念","permalink":"http://code004accepted.github.io/tags/%E7%BA%AA%E5%BF%B5/"}]},{"title":"关于进入九年级后此博客处理办法的公告","slug":"notice-about-junior-grade-9","date":"2019-08-17T01:18:24.000Z","updated":"2021-02-14T03:56:40.115Z","comments":true,"path":"2019/notice-about-junior-grade-9/","link":"","permalink":"http://code004accepted.github.io/2019/notice-about-junior-grade-9/","excerpt":"","text":"众所周知，在2019年8月23日（提前开学），本人将正式成为一名初三学生。由于 元月调考/四月调考/中考 这三场考试对每一位考生都意义重大，影响未来命运，现特别给出以下公告： 关于进入九年级后此博客处理办法的公告2019.08.17 01:18:24 公告作者：code004/code004Accepted 因为我即将进入学习紧张的初三，故此博客很可能没有时间来更新。之前的一周2/3更，现更改为一月1/2更，感谢谅解。此博客会保持开放，也仍然欢迎大家的评论和友链申请！ The Notice About Junior Grade 92019.08.17 01:18:24 Author: code004/code004Accepted Because that I am entering Junior Graduation Grade (Grade 9), I would not possibly have too much time to update my blog. I will probably only have time to update my blog once to twice a month. This website will remain open and it still welcomes all your comments!","categories":[{"name":"公告","slug":"公告","permalink":"http://code004accepted.github.io/categories/%E5%85%AC%E5%91%8A/"}],"tags":[{"name":"学校","slug":"学校","permalink":"http://code004accepted.github.io/tags/%E5%AD%A6%E6%A0%A1/"}]},{"title":"分享一下自己平常喜欢用的软件","slug":"some-softwares-i-like","date":"2019-08-14T23:08:23.000Z","updated":"2021-02-14T03:56:40.143Z","comments":true,"path":"2019/some-softwares-i-like/","link":"","permalink":"http://code004accepted.github.io/2019/some-softwares-i-like/","excerpt":"分享一下自己平常喜欢用的软件qwq","text":"分享一下自己平常喜欢用的软件qwq IDE/文本编辑器Microsoft Visual Studio 优点： 在安装的时候可以根据喜好自定义想安装的模块，安装速度快 扩展商店内容多，还可以与Qt连接 项目生成速度快，头文件囊括量大，好像还包括OpenGL 轻松手动复制粘贴需要的全局头文件和lib库 还有图片编辑功能，窗口编辑功能等普通IDE不可能有的功能，且自带HTML语法高亮，亦可以当成文本编辑器使用 怎么感觉自己在给VS打广告qwq 缺点： 启动速度慢，项目生成容易卡顿 简单的代码还可以用单步调试，5000多行的工程，你试试看？分分钟电脑卡爆 安装很容易失败，动不动就什么组件装不好，而且很多“共享组件”必须装在C盘（具体请看我的另一篇博文，Visual Studio 安装记） 单独一个cpp文件不能直接编译，必须新建一个工程，把代码放进去，才能正常编译 官网下载 便携版下载（推荐，仅含2017及之前版本）（提取码：2333） GUIDE 优点： 轻便，灵巧，CCF官方IDE，NOI系列比赛可用（有的时候，必须用） 运行速度快，错误提示详尽 可以方便地自己定义编译器位置，也可以轻松地自行设置代码字体/大小/颜色 有单步调试功能，很方便 还可以同时当成文本编辑器使用 缺点： 启动时好像会加载上次关闭时的文件，所以如果你用它看了几十个数据，千千万万要在关掉GUIDE之前把所有文件都关了，否则你下次打开时… 默认窗口布局很不喜欢…个人喜欢信息查看栏在左边，代码在右边，不要“文件夹”窗口。关键是你调好了以后，重新打开GUIDE，又变成了老样子 怎么能没有Dark Mode!!!抗议！眼睛都瞎了！（知不知道，我的博客的Materialized主题分站，长按上面中间的“code004’s Blog”可以开启自带Dark Mode） 单步调试的时候，“本地变量”窗口仅支持当前函数里定义的变量，全局变量就悲惨了…只能自己手动添加了… 官网下载 Microsoft VS Code （上图就是我正在编辑此博文的情景） 优点： 轻便，灵巧，提供多语言支持，基本上你能想到的语言，VS Code都可以解析 扩展商店内容丰富，可以根据自己需要下载（比如下载一个C/C++编译运行的插件，你就可以不用设置json文件，直接编译C/C++了） 提供内置终端，可以分屏查看（比如左边放着代码，右边放着终端运行） 既可以单文件编辑，也可以使用“工作空间”（也就是一个文件夹）里面放着代码来编辑运行 右上角有代码预览，也可以用来方便地调节正在浏览的位置 缺点： 如果不安装扩展，你要编译运行C/C++只能配置复杂的一堆json文件，我到现在也没弄好（八成是因为我比较懒qwq） 好像每次启动就自动检查更新，每次退出就自动更新，取消不了 扩展安装有些时候比较慢 即使是仅仅实现小功能的一个扩展，也常常需要占用你C盘大概100~200MB的内存，而且必须在C盘，改不了… 官网下载 Sublime Text 其实说老实话，Sublime Text和VS Code比较像，都是文本编辑器，功能也都比较像，只不过我更喜欢Sublime的字体配置，也自带Dark Mode… 优缺点就不再逐一分析了，与上述大致相同 英文官网下载 中文官网下载 FBIDE没什么…就是我比较喜欢玩这个极度古老，没人学的语言，看着挺好玩的，也感谢乔展荣dalao，他初一时用Free Basic创作出的NEWorld（一个仿MC的游戏）令我对这个语言很感兴趣，更感谢他当时开源，给了我学习FB的机会qwq 既然FB的IDE也没人学，没人用，现在Free Basic也没什么人，也就不介绍了233 Office&amp;压缩软件LibreOffice 说到Office，肯定都会说WPS吧，或者就是微软自己的Office，可是… WPS，占用内存大，广告一大堆，据说卸载的时候还会把对手软件给破坏掉，总之垃圾的不行，烦死人，占用一大堆虚拟内存，还经常全屏卡住闪退，千万记住，如果你非要用WPS，文档必须写一个字保存一下，否则一闪退你就完了 微软自己的Office，占用内存不知道有多大，而且还存到C盘，我不干 之前自己看到过“极速Office”（和极速PDF阅读/编辑器是一家公司的），个人感觉挺好的，比较适合正常的工作使用，注册账号之后也有5G的免费云空间，就是自定义选项太少了，我不太喜欢，字体什么的调起来也比较麻烦，有的时候还不兼容微软Office 所以，我选了Linux下很著名的Libre Office. 优点： doc ppt xls文档与微软全兼容 文档编辑方便快速，还有数据库和Latex公式编辑功能 占用内存小，一般就300~500M（比极速Office大） Dark Mode！当然也可以自定义程序颜色 轻松调节行距段距，不像那个猥琐WPS，慢的要死 绝对不闪退，也有自动保存功能 开源，dalao可以自行魔改 缺点： docs pptx xlsx文档有的时候不兼容，导致有的时候我写的文档别人看不了… 没有自动云端存储功能，不过平常也不怎么需要用 虽然有LibreOffice Draw的子程序，但是好像并没有什么用，并不能像画图一样编辑图片qwq 官网下载 Bandizip压缩软件，大家都会说WinRAR吧…但因为那玩意广告太多，并且用的很不顺手（不知道为什么我有这样的感觉），所以就自己找了一个压缩软件，Bandizip 在压缩软件上，我和extmool大佬可谓不谋而合，大概就是觉得这款压缩软件挺好用的，压缩解压快，支持图片快速查看，而且完全没有广告，UI看着也很顺眼。右键压缩包还可以预览/快速解压文件，很方便。 官网下载 电脑安全&amp;清理软件火绒安全软件 原来一直用电脑管家，因为认为360体积大，容易卡，而且很容易把电脑搞崩 后来，在你谷上提了一个相关问题，才知道，360危险卫士和电脑破坏家是有多么猥琐qwq 于是，跟随你谷大部分用户的建议，决定使用火绒，体积小，病毒查杀快 优点： 如上所说，体积小，查杀快，不容易卡 支持拦截所有上网程序，适合电脑专家与开发者使用 还支持自定义规则，轻轻松松控制电脑 在后台运行几乎不占CPU和虚拟内存，不像电脑破坏家，动不动就30%多被占了 整个程序就一个进程，轻松查杀所有病毒，也有U盘助手，不像电脑破坏家，一堆安全保护进程，也没有什么用，整天不查杀病毒，跑来查杀我的项目qwq 缺点： 不知道是不是只有我有这个问题，有的时候系统修复和断网修复会提示修复失败（估计是我之前被电脑破坏家洗脑所致，一直告诉我修复成功，什么用也没有） 好像只有一个缺点qwq 官网下载 CCleaner 当初因为C盘安了VS2017便携版（占用了大概4个G）以后，只剩大概70G（一共100G），内存日益减小（Windows总是会弄出一堆系统日志和什么自动备份文件，存档，总之都是没用的系统垃圾），电脑管家的垃圾清理+下载清理+系统盘瘦身大概…能处理掉1G垃圾里的100M吧…火绒的垃圾清理也不是特别给力，大概…能弄掉200~300M，但是对于我来说这是远远不够的，于是经常可以看到我在电脑前面非常着急的一边使用各种Windows自带的系统清理，一边百度C盘深度清理方法，一边自己去AppData里瞎删… 事后证明，上面这种处理方法，完全是置电脑和自己文件的安全于不顾，一不小心把什么驱动删了，又一不小心把什么软件的信息全删了，轻则导致部分软件无法使用，需要重新安装，也有可能导致某些聊天/代码记录丢失，重则导致系统崩溃，无法开机，最终只能通过重装系统解决。 后来发现这款软件，简直像寻到了宝一样，妈妈再也不用担心我的C盘空间不够了，只要有了CCleaner，你的C盘垃圾文件瞬间死光光 首先，下载安装以后选择“自定义清理”（或者如果你下的是老版本，直接清理），可以勾选你需要的所有选项（敏感选项主要包括：“擦除可用空间”，某些软件的使用历史记录，QQ/TIM聊天记录，Flash缓存，浏览器历史记录/下载记录，清空回收站这些），如果你不放心就把上面提到的敏感选项全部不选，其他的基本上都可以清理，没什么问题。先点击“分析”再点击“清理”即可…如果还不满意，可以在左边的“工具”里找到“驱动器擦除”，选择“擦除可用空间”后开始即可，你当然也可以在前面清理的时候就直接选中擦除可用空间（注意，如果选错了，会导致磁盘被格式化，所有数据全部丢失），我不知道这种“擦除可用空间”是什么原理，也没试过（时间特别长，几个小时），好像开始了以后会先扫描，扫描完了就会开始清理，清理过程中会在你的C盘（或者你选中的盘）里建一个特大的文件夹（或者直接一个文件），里面的文件越来越多，占用内存越来越大，这是在“擦除可用空间”，不用担心qwq 还有，如果C盘空间还不够，或者还有临时文件没清掉，估计就不是Windows的文件了，估计是你安装的某些软件弄的…那就用下面这个软件吧qwq 请自行百度下载 Wise Disk Cleaner 这个软件好像是之前在电脑管家的软件管理里面下的，不过你也可以到官网取下（速度几乎为0），很轻巧，在电脑管家里下了以后是一个压缩包而不是一个安装程序。解压，运行即可。可以清除系统中大部分log文件，基本上全部选择没问题 官网下载（比较慢，请自行科学上网） 电脑管家下载 千万要点“普通下载”！ 浏览器&amp;下载软件好的浏览器有不少，就不一一截图解释了。总之，个人认为Chrome内核的比IE内核的要好得多。推荐如下浏览器： OperaOpera是一个Chrome内核的浏览器，自带免费VPN（好像这个功能在新版本里被阉割了qwq），最重要的是，Opera的扩展商店不需要翻墙即可访问。之所以我不推荐Google Chrome是因为Chrome Web Store不能在国内访问。当然了，你也可以通过谷歌访问助手轻松解决这一点，但是Opera的扩展商店可以不用翻墙，何必要搞得那么麻烦呢…而且，Opera下了一个官方插件以后，也可以直接下载Chrome的插件。 不过关于Opera我必须吐槽一点，如果窗口里标签页多了或者系统虚拟内存比较大了，就会自动闪退然后再重新打开。关键是，重新打开的时候，我前面的标签都没了！！！在Chrome上这个问题是不存在的，首先Google Chrome没那么容易闪退，其次就算真的闪退重启了，你的标签也会一个不少地回来。就算它意外错误闪退没有重启，你再次打开地时候也会提示你上次意外关闭。Opera的话，闪退重启了以后它会有一个小横幅一样的，告诉你Opera出现故障，但是并没有恢复选项，只有一个叉和一个“否，不再询问”。你就只能从历史记录里找了qwq 如果你装了CCleaner并且开启了软件监控，八成在Opera“故障”的时候，你的历史记录就全没了qwq 不过这也培养了我一个很好的习惯。比如在洛咕发帖的时候，我会先新建一个md文件并把要写的内容写进去，完了以后再复制粘贴到发帖的地方，否则很容易因为Opera闪退导致我白写了半天稿子qwq 请自行百度下载 Firefox其实Firefox不太好用，因为是国内的浏览器，导致广告也比较多，比较麻烦，不过插件什么的也都是国内可以访问的，作为一个Chrome用惯的蒟蒻，我个人不太喜欢Firefox，不过也推荐一下qwq 请自行百度下载 PanDownload 很多人喜欢把文件传到百度网盘下载，也有的时候我个人会去网上找某些盗版电影资源看一下，但是从百度网盘下载（如果你不是VIP），exe文件和超过200M（也有可能是超过100M）的文件都必须使用它的垃圾广告满天飞，占用大量内存的客户端下载。就算你用客户端，下载速度也被限制，使用“免费试用”的VIP也最多1M/s，可以说下载速度基本与网速无关qwq 而且，之前每天试用两次，一次有200s，够下载一个200M的文件了，但是最近越来越毒瘤，现在只有60s试用了，啥都下不下来。还经常卡顿断线qwq 之前一直用Proxyee-down，但是发现很麻烦，于是最近换成PanDownload，良心软件，不得不推荐。 优点： 程序体积小（5M多一点），没有广告（工具中心的赞助作者按钮应该不算广告吧qwq） 百度网盘官方的磁力链接和种子解析都很慢，多数时候甚至几个小时卡在0%，PanDownload内含解析器，快速解析，不会断线错误 百度网盘官方每天只让你查找一次垃圾文件什么的，还不让清理，只告诉你哪里有。PanDownload内置垃圾文件与重复文件清理，快速方便无限量 还支持资源搜索，可以在创建分享链接的时候自定义提取码（比如我可以设置提取码为2333） 好像支持不登录账号就下载分享链接里的文件 缺点： 登录的时候肯定需要你输入百度账号密码啦~ 可能有盗号风险 不过我充分信任这款软件 使用之后，你的百度账号有可能会被关进小黑屋（一级小黑屋特征：不让你下载大文件或速度极慢，二级小黑屋特征：部分文件下载的时候提示网盘出现故障或者提示无法下载，三级小黑屋特征：百度账号已被封禁）一般来说，日常下点文件最多进一级小黑屋，天天下一堆文件才可能进二级小黑屋。三级小黑屋是一般人进不了的，放心。还有，一般来说进了一二级小黑屋以后7~30天即可出来，你自己看下载速度就知道了qwq 官网下载 其他Skype不截图了，微软著名的聊天软件，很好用，支持视频通话等，传输的文件永久保存不会删，而且使用你的微软账号即可登录，不需要另外注册 没有手机号也可以用，很方便 之所以我用Skype不用QQ和微信的原因是，后两者都曾被曝光获取用户聊天记录，而且我仔细阅读了一下用户协议，QQ和微信的用户协议都说了允许第三者使用聊天记录 Skype的协议里没有这种东西，而且我也充分相信微软这种全球的大公司，这种比腾讯大几十倍的公司，不会在用户不知道的情况下盗取用户聊天记录 请自行百度下载 Google Earth Pro呵呵…我电脑上也没什么游戏，Google Earth的飞行模拟器足矣。而且，很真实，比其他模拟飞行的软件好得多qwq 请自行科学上网去官网下载或者去某些下载站下载 GifCam不需要某些专业屏幕录制工具，用GifCam即可解决GIF录制问题，只需1.55M，且不影响屏幕操作 请自行百度下载 总结上述这些软件，个人认为都是比较好的，如果各位dalao有更好的软件，欢迎在下面评论区推荐给本蒟蒻！ 个人对软件评价标准： 易用程度，就是说软件是否方便日常使用 美观程度，就是说软件的UI设计是否让我满意 专业程度，就是说软件能否真正解决它应该解决的问题 简洁程度，就是说软件体积是否足够小（尤其是占用C盘的体积），是否足够简洁 欢迎dalao补充/提出建议！","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[{"name":"软件","slug":"软件","permalink":"http://code004accepted.github.io/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"祝 Peter Benjamin Parker 生日快乐","slug":"happy-birthday-to-peter-parker","date":"2019-08-10T19:37:24.000Z","updated":"2019-08-10T19:37:24.000Z","comments":true,"path":"2019/happy-birthday-to-peter-parker/","link":"","permalink":"http://code004accepted.github.io/2019/happy-birthday-to-peter-parker/","excerpt":"祝彼得·帕克18岁生日生日快乐！ Happy birthday to Peter Benjamin Parker / Spiderman !","text":"祝彼得·帕克18岁生日生日快乐！ Happy birthday to Peter Benjamin Parker / Spiderman ! ( This video was created by 𝓪𝓵𝓪𝓷𝓪 @ediitsbyal at picimon ) Read more","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[{"name":"娱乐","slug":"娱乐","permalink":"http://code004accepted.github.io/tags/%E5%A8%B1%E4%B9%90/"},{"name":"纪念","slug":"纪念","permalink":"http://code004accepted.github.io/tags/%E7%BA%AA%E5%BF%B5/"}]},{"title":"祝 Harry Potter 生日快乐","slug":"happy-birthday-to-harry-potter","date":"2019-07-31T19:19:58.000Z","updated":"2019-07-31T19:19:58.000Z","comments":true,"path":"2019/happy-birthday-to-harry-potter/","link":"","permalink":"http://code004accepted.github.io/2019/happy-birthday-to-harry-potter/","excerpt":"","text":"祝哈利·波特39岁生日快乐！ Happy birthday to the boy who lived. Read more A long quiz about Harry Potter","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[{"name":"娱乐","slug":"娱乐","permalink":"http://code004accepted.github.io/tags/%E5%A8%B1%E4%B9%90/"},{"name":"纪念","slug":"纪念","permalink":"http://code004accepted.github.io/tags/%E7%BA%AA%E5%BF%B5/"}]},{"title":"武汉二中广雅中学的历史","slug":"the-history-of-ezgy","date":"2019-07-30T22:07:42.000Z","updated":"2019-07-30T22:07:42.000Z","comments":true,"path":"2019/the-history-of-ezgy/","link":"","permalink":"http://code004accepted.github.io/2019/the-history-of-ezgy/","excerpt":"温馨提示本文图片较多，信息量极大，请注意安全 说明由于图片过大/过多，本文图片已全部转移到sm.ms图床，如果图片无法加载请在下方评论或直接提出Issue 图片已打包上传到github，如果图床崩了，请在这里下载相关图片。","text":"温馨提示本文图片较多，信息量极大，请注意安全 说明由于图片过大/过多，本文图片已全部转移到sm.ms图床，如果图片无法加载请在下方评论或直接提出Issue 图片已打包上传到github，如果图床崩了，请在这里下载相关图片。 前言好像Google Earth所记录的最早的卫星照片就是2000年的吧… Err…是不是有点陌生，看不出来？ 没关系，我放一个今年（2019年）6月14日的截图，你就能看出来了 还有批注了的“地图”： 所有历史的截图里的位置都和上面这个图片的位置完全一样，请自己对照查看 好的，现在，我们开始从2000年到2019年，回顾一下EZGY的发展历程： 2000 2003 2004 2005 2006 可以看到，2006年及之前，图片的左上角都是一栋教学楼，但是从2007的图片开始，左上角就变成了一片空地 2007 2009 前面的图还看不出来，下面这张可以看出，2009年的时候，右上角的大操场中间是绿色的，左边的小操场是蓝色的 难不成我们学校还曾经有过足球队？！为什么大操场那么像足球草坪 2010上个图片和这个图片有很鲜明的对比，左上角的小操场蓝变绿，右上角的大操场绿变蓝 2019很明显，我到这里已经比较累了，看到2011~2019没有明显变化且大部分图片很模糊，所以直接放上来几张2019的学校周边图： 后记 所有图片都是从Google Earth上截下来的 学校在2000年都有截图，证实了老师们关于学校悠久历史的介绍 可以看出，学校在这20年间，变化非常大。EZGY，每天不一样 关于足球的问题 求解… 求解，学校是怎么在一年内把2006年图片左上角的那栋楼拆掉的…直接变平地了…还有为什么要拆，那栋楼以前是干什么用的… 由于后来科技越来越发达了，所以在2010到2019年间有几十个版本的图片，直接略了。要研究的，自己下Google Earth去…","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[{"name":"学校","slug":"学校","permalink":"http://code004accepted.github.io/tags/%E5%AD%A6%E6%A0%A1/"}]},{"title":"纪念 Wesley Ding","slug":"in-memory-of-wesley-ding","date":"2019-07-13T22:49:27.000Z","updated":"2019-07-13T22:49:27.000Z","comments":true,"path":"2019/in-memory-of-wesley-ding/","link":"","permalink":"http://code004accepted.github.io/2019/in-memory-of-wesley-ding/","excerpt":"昨天了解到天才少年韦斯理(Wesley Ding)的传奇故事，遂于今日下午发布 In memory of Wesley Ding 专版 GC Server。请前往GC Server 分站下载。 顺便做了一些小优化，欢迎下载。","text":"昨天了解到天才少年韦斯理(Wesley Ding)的传奇故事，遂于今日下午发布 In memory of Wesley Ding 专版 GC Server。请前往GC Server 分站下载。 顺便做了一些小优化，欢迎下载。 相关文章： 泪目！00后天才少年病逝留下遗作，妈妈花3年时间续写出版 《蓝花楹》：天才少年中文构思澳洲史诗 母子合著历史小说《蓝花楹》，展开澳大利亚的历史画卷","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[{"name":"纪念","slug":"纪念","permalink":"http://code004accepted.github.io/tags/%E7%BA%AA%E5%BF%B5/"},{"name":"GC Server","slug":"GC-Server","permalink":"http://code004accepted.github.io/tags/GC-Server/"}]},{"title":"关于一道英语问题的争议","slug":"the-argument-about-an-english-problem","date":"2019-07-01T23:49:39.000Z","updated":"2019-07-01T23:49:39.000Z","comments":true,"path":"2019/the-argument-about-an-english-problem/","link":"","permalink":"http://code004accepted.github.io/2019/the-argument-about-an-english-problem/","excerpt":"题目来源：武汉市江岸区2018-2019学年度八年级下学期期末考试 题号：57","text":"题目来源：武汉市江岸区2018-2019学年度八年级下学期期末考试 题号：57 阅读中给出的图片中有以下文字： 1Register before July 15th 题目： 12357.If you want to join the family camp, you must register no later than _______. A. July 14th B.July 15th C.July 28th D.July 29h 好，不得不说这道题肯定是非常不严谨的。D选项漏了一个t不说，光是这个no later than就很能引起争议。 而且这位**出题老师还给了一个14th的选项，分明就是想被考生骂死。 老师给出的解释是不要想太多，这里no later than = before。反正我查了一下牛津高阶和我的电子词典，结果如下： 词典证据牛津高阶英汉双解词典（第八版）1234P1394中提到，no作副词时意思与not相同。[returnable] P1766例句：The application form is returnable not later than 7th June.翻译：申请表应不迟于6月7日交回 12[later] P1174no/not later than 这个词组给出的意思是：不晚于···，不迟于··· 好，你或许会说牛津高阶不标准，我们看看其他词典： 牛津英语搭配词典（英汉双解第2版）123[day]例句：Entries are to arrive no later than Monday, October 1st翻译：···在10月1日星期一及之前送交 还不信？继续 英语搭配大辞典（外语教学与研究出版社）123[send]例句：Please send in your application no[not] later than the 15th of this month.词典中未给出翻译 柯林斯COBUILD英汉双解词典（上海译文出版社 2006）123[no]例句：Winners will be notified by post no later than 31st August.翻译：···将在8月31日及之前收到··· 汉英大词典（第三版）（上海译文出版社）123[至迟]她~明天回来She will be back no later than tomorrow. 后续说明1.余博文已将此阅读及题目拍照发送给图片中的邮箱； 2. 设想 如果 no later than = before 也就是说 no smarter than = more stupid than 那么如果是 He is no smarter than her. 换句话说，本来男的和女的两个人智商差不多，你这句话直接改成了： He is more stupid than her. 就变成了男的比女的蠢啊！！！ 求支持！","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[{"name":"学校","slug":"学校","permalink":"http://code004accepted.github.io/tags/%E5%AD%A6%E6%A0%A1/"},{"name":"英语","slug":"英语","permalink":"http://code004accepted.github.io/tags/%E8%8B%B1%E8%AF%AD/"}]},{"title":"GC Server 开发工作继续","slug":"gc-server-development-resumed","date":"2019-06-29T22:52:14.000Z","updated":"2019-06-29T22:52:14.000Z","comments":true,"path":"2019/gc-server-development-resumed/","link":"","permalink":"http://code004accepted.github.io/2019/gc-server-development-resumed/","excerpt":"说明即日起，GC Server的开发工作将继续进行。今日已推出新版：Alpha 9.0 Release 20190629 (Spiderman: Far From Home) Notice:Since the final exam is over, all GC Server development progress has returned to normal. PS: The release today is: Alpha 9.0 Release 20190629 (Spiderman: Far From Home)","text":"说明即日起，GC Server的开发工作将继续进行。今日已推出新版：Alpha 9.0 Release 20190629 (Spiderman: Far From Home) Notice:Since the final exam is over, all GC Server development progress has returned to normal. PS: The release today is: Alpha 9.0 Release 20190629 (Spiderman: Far From Home) 最新版GC Server 开始首页: The startpage of the newest version of GC Server: 请至GC Server分站下载，感谢支持 Please go to GC Server subsite. Thanks for supporting. GC Server 分站 / GC Server subsite ：https://code004accepted.github.io/GC-Server 吐槽请不要再在本站留言板和GC Coding论坛里刷屏谈论“Peter Parker好帅”之类的话了，我已经受够了。 这个特别版本完全是被你们逼出来的，不过也别想多了，顶多换个封面，不会搞什么大动作的。 如果你们想换成正常的封面，请下载下面这个图片，安装完了以后替换掉安装目录的 startpage.jpg 即可。","categories":[{"name":"项目","slug":"项目","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/"},{"name":"GC Server","slug":"项目/GC-Server","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/GC-Server/"}],"tags":[{"name":"开发工作","slug":"开发工作","permalink":"http://code004accepted.github.io/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E4%BD%9C/"}]},{"title":"GC Server 开发工作暂停","slug":"gc-server-development-paused","date":"2019-06-11T20:24:10.000Z","updated":"2019-06-11T20:24:10.000Z","comments":true,"path":"2019/gc-server-development-paused/","link":"","permalink":"http://code004accepted.github.io/2019/gc-server-development-paused/","excerpt":"说明：由于我和我们的开发副主席余博文同学会在2019年6月27-28日参加八年级下学期期末考试，且这次考试对我们很重要，所以从今日（2019年6月11日）开始，暂停GC Server的开发，直到6月28日后恢复。 Notice:Because of the Final Exam of Me and Bowen Yu which will take place on 27th/28th June 2019, the development of GC Server will stop until 28th June 2019. The development will be back to normal after our Final Exam. Thanks for your support.","text":"说明：由于我和我们的开发副主席余博文同学会在2019年6月27-28日参加八年级下学期期末考试，且这次考试对我们很重要，所以从今日（2019年6月11日）开始，暂停GC Server的开发，直到6月28日后恢复。 Notice:Because of the Final Exam of Me and Bowen Yu which will take place on 27th/28th June 2019, the development of GC Server will stop until 28th June 2019. The development will be back to normal after our Final Exam. Thanks for your support. 附加说明：请正在备考的同学们不要过于期待将于本年6月28日（即考试结束当天）上映的《蜘蛛侠：英雄远征》。 PS:All the students who are preparing for the exam, please do not pay too much attention on the movie which will be on on June 28th. ![英语海报1](poster1.jpg) ![英语海报2](poster2.jpg) ![英语海报3](poster3.jpg) ![英语海报4](poster4.jpg) 注意：英语海报上的上映日期与中国的上映日期不同。 ![中文海报](chinese-poster.jpg) 更多电影详情 PS: GC Server 项目LOGO： 项目LOGO，非程序/软件LOGO","categories":[{"name":"项目","slug":"项目","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/"},{"name":"GC Server","slug":"项目/GC-Server","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/GC-Server/"}],"tags":[{"name":"开发工作","slug":"开发工作","permalink":"http://code004accepted.github.io/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E4%BD%9C/"}]},{"title":"GC Server Ver 9.0","slug":"gc-server-ver-9-0","date":"2019-06-02T16:12:10.000Z","updated":"2019-06-02T16:12:10.000Z","comments":true,"path":"2019/gc-server-ver-9-0/","link":"","permalink":"http://code004accepted.github.io/2019/gc-server-ver-9-0/","excerpt":"Ver 9.0于2019年6月1日首发，首发版同时是为了纪念六一儿童节与Tom Holland的23岁生日而作。 我才不会告诉你其实我6月1日没完工，所以是6月2日才发的","text":"Ver 9.0于2019年6月1日首发，首发版同时是为了纪念六一儿童节与Tom Holland的23岁生日而作。 我才不会告诉你其实我6月1日没完工，所以是6月2日才发的所有版本下载链接: https://pan.baidu.com/s/1_wwZtbEhUAxnTdiI0fr4mg 提取码: v8jv 欢迎下载！ 更新说明：增加了地图/无限宝石/姓名登录功能 欢迎测试，有任何BUG或疑问请至左侧（手机版是上侧）目录中的留言板反馈，谢谢。 PS：检测更新功能等待完善","categories":[{"name":"项目","slug":"项目","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/"},{"name":"GC Server","slug":"项目/GC-Server","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/GC-Server/"}],"tags":[{"name":"项目发布","slug":"项目发布","permalink":"http://code004accepted.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83/"}]},{"title":"GC Server 预览版本","slug":"gc-server-preview-version","date":"2019-05-20T23:30:36.000Z","updated":"2019-05-20T23:30:36.000Z","comments":true,"path":"2019/gc-server-preview-version/","link":"","permalink":"http://code004accepted.github.io/2019/gc-server-preview-version/","excerpt":"说明说一下，之所以最近GC Server子站没更新，是因为网站的设置出了点问题。这个Bug会很快修复的，放心~","text":"说明说一下，之所以最近GC Server子站没更新，是因为网站的设置出了点问题。这个Bug会很快修复的，放心~ 最近的版本最近有以下版本发行： 五四专版（Special） 五四专版（Super） 预览版（Preview） （按照发行时间从先到后，所以本文更新截止，最新的是预览版） 老规矩，在两个链接下载，自己去分站的之前Release找，链接一直不变。 谢谢~ PS： 最新Preview版加入很多设置功能，欢迎测试并反馈Bug~","categories":[{"name":"项目","slug":"项目","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/"},{"name":"GC Server","slug":"项目/GC-Server","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/GC-Server/"}],"tags":[{"name":"项目发布","slug":"项目发布","permalink":"http://code004accepted.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83/"}]},{"title":"使用C++制作GC Server","slug":"make-your-own-gc-server-with-cpp","date":"2019-05-19T00:43:10.000Z","updated":"2019-05-19T00:43:10.000Z","comments":true,"path":"2019/make-your-own-gc-server-with-cpp/","link":"","permalink":"http://code004accepted.github.io/2019/make-your-own-gc-server-with-cpp/","excerpt":"简介最近很多人找我要GC Server的源代码。我跟他们讲环境要求的时候，很多人都不以为然，结果最后仅仅测试程序就报了几千个Error。所以，我决定今天讲一下如何搭建你自己的GC Server。（目前还没有一个人成功，请量力而行，如果成功了记得在评论区告诉我~）","text":"简介最近很多人找我要GC Server的源代码。我跟他们讲环境要求的时候，很多人都不以为然，结果最后仅仅测试程序就报了几千个Error。所以，我决定今天讲一下如何搭建你自己的GC Server。（目前还没有一个人成功，请量力而行，如果成功了记得在评论区告诉我~） 步骤1. 系统配置本文仅适用于Windows系统，支持Win7及以后的大部分版本，Win10最佳。 2. 环境配置首先，你需要一个支持C/C++的IDE（强烈推荐Visual Studio，后面的操作会更方便），然后你需要下载一个图形库，比如WinAPI。最后你需要将图形库安装到你的IDE的配置里面，将include和lib都装到要求的文件夹里，这就不必多说了，如果有问题请在评论区说明。 3. 编译测试注意！在此步骤下如果出现任何系统错误，请立即停止操作！推荐在开始前将系统进行备份！ Step 1 - 创建项目在这一步里，需要你在你的IDE里创建一个C/C++的项目，确保创建正常且Hello world可以运行。（我精心帮你准备好了测试用的Hello World代码^_^） 12345678//C++#include &lt;iostream&gt;using namespace std;int main()&#123; cout&lt;&lt;&quot;Hello,world!&quot;&lt;&lt;endl; return 0;&#125; 1234567//C#include &lt;stdio.h&gt;int main()&#123; printf(&quot;Hello,world!\\n&quot;); return 0;&#125; Step 2 - 图形库测试你需要include你之前引入的图形库的头文件，然后再设置一下比如这样： 123456789101112#include &lt;graphics.h&gt; // 引用图形库头文件#include &lt;conio.h&gt;int main()&#123; initgraph(640, 480); // 创建绘图窗口，大小为 640x480 像素 setlinecolor(RGB(255, 0, 0)); // 设置当前线条颜色 setfillcolor(RGB(0, 255, 0)); // 设置当前填充颜色 fillcircle(200, 200, 100); // 画圆，圆心(200, 200)，半径 100 system(&quot;pause&quot;); // 按任意键继续，getch();亦可 closegraph(); // 关闭图形环境 return 0;&#125; 如果上面的代码你可以运行成功，那么恭喜你，你可以进入下面的步骤了~ Step 3 - 按钮制作很多人看到图形库的功能后都很吃惊，但是也有人问我，GC Server里面的那些不同颜色的按钮时怎么画出来的。因为，图形库好像没有自带画按钮的功能啊~ 很简单，如下： （下方代码为GC Server 8.7最后更新的源代码片段，为防止数据泄露，我们没有采用最新版本的代码，且在原版本的基础上做了部分处理，不影响代码的理解） 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859settextstyle(90, 0, _T(&quot;楷体&quot;));setbkcolor(RED);outtextxy(20, 160, _T(&quot;欢迎您使用 GC Server!&quot;));setbkcolor(BLUE);settextstyle(38, 0, _T(&quot;楷体&quot;));outtextxy(124, 301, _T(&quot;快速注册&quot;));rectangle(120, 300, 280, 340);outtextxy(404, 301, _T(&quot;程序信息&quot;));rectangle(400, 300, 560, 340);outtextxy(684, 301, _T(&quot;立即登录&quot;));rectangle(680, 300, 840, 340);MOUSEMSG m;while (true)&#123; m = GetMouseMsg(); if (m.x &gt;= 120 &amp;&amp; m.x &lt;= 280 &amp;&amp; m.y &gt;= 300 &amp;&amp; m.y &lt;= 340) &#123; if (m.uMsg == WM_LBUTTONDOWN) &#123; //此处为注册代码，安全起见被删除 &#125; else &#123; settextstyle(35, 0, _T(&quot;楷体&quot;)); outtextxy(130, 302, _T(&quot;快速注册&quot;)); &#125; &#125; else if (m.x &gt;= 400 &amp;&amp; m.x &lt;= 560 &amp;&amp; m.y &gt;= 300 &amp;&amp; m.y &lt;= 340) &#123; if (m.uMsg == WM_LBUTTONDOWN) &#123; //此处为程序信息代码，安全起见被删除 &#125; else &#123; settextstyle(35, 0, _T(&quot;楷体&quot;)); outtextxy(410, 302, _T(&quot;程序信息&quot;)); &#125; &#125; else if (m.x &gt;= 680 &amp;&amp; m.x &lt;= 840 &amp;&amp; m.y &gt;= 300 &amp;&amp; m.y &lt;= 340) &#123; if (m.uMsg == WM_LBUTTONDOWN) &#123; //此处为登录代码，安全起见被删除 &#125; else &#123; settextstyle(35, 0, _T(&quot;楷体&quot;)); outtextxy(690, 302, _T(&quot;立即登录&quot;)); &#125; &#125; else &#123; settextstyle(38, 0, _T(&quot;楷体&quot;)); outtextxy(124, 301, _T(&quot;快速注册&quot;)); outtextxy(404, 301, _T(&quot;程序信息&quot;)); outtextxy(684, 301, _T(&quot;立即登录&quot;)); &#125;&#125; 代码的思路：先把按钮画出来，然后再判定鼠标动作。如果鼠标再指定区域内且左键单击，就说明用户点击了按钮。 当然了，你还可以搞些小花样，比如说我之前做的lock项目（电脑安全锁）就用到了鼠标手势代码： 12345678910111213141516171819202122232425262728293031323334353637MOUSEMSG m2;int flag1 = 0, flag2 = 0;settextstyle(20, 0, _T(&quot;楷体&quot;));rectangle(600, 500, 650, 530);outtextxy(605, 505, _T(&quot;确定&quot;));while (true)&#123; m2 = GetMouseMsg(); if (m2.x &gt;= 600 &amp;&amp; m2.x &lt;= 650 &amp;&amp; m2.y &gt;= 500 &amp;&amp; m2.y &lt;= 530) &#123; settextstyle(25, 0, _T(&quot;Consolas&quot;)); if (m2.uMsg == WM_MBUTTONDBLCLK) &#123; flag1 = 1; continue; &#125; else if (m2.uMsg == WM_LBUTTONDOWN &amp;&amp; flag1 == 1) &#123; flag2 = 1; continue; &#125; else if (m2.uMsg == WM_RBUTTONDOWN &amp;&amp; flag2 == 1) &#123; break; &#125; else &#123; settextstyle(22, 0, _T(&quot;楷体&quot;)); outtextxy(603, 503, _T(&quot;确定&quot;)); &#125; &#125; else &#123; settextstyle(20, 0, _T(&quot;楷体&quot;)); outtextxy(605, 505, _T(&quot;确定&quot;)); &#125;&#125; 上述代码就是要先双击鼠标中键的滚轮（向下按），然后再左键一次右键一次即可。 Step 4 - 添加游戏游戏可以直接在GC Coding发帖，我会回复的。目前来说，大部分在GC Server目前版本已经开放的游戏代码都可以直接找我要。 Just @code004 on the GC Coding Forum Step 5 - 设计插件更改模块你需要在Github上开一个repo，然后把你想用的插件打包传上去，用户想下载的时候，只需要用system调用打开浏览器访问指定网址，然后提示用户将下载的包放到安装目录中，再点击某个神奇的按钮后程序就自动开始解析用户下载的包，然后把文件加到下载目录里去。程序再修改一个安装目录下的文件，比如把0改成1，然后开始加载这个插件。 一般来说用户比较喜欢有卸载功能的插件，这个也很简单，只需要加上一个卸载按钮，一旦用户点击确定后就删除包，然后把上面说的文件再改回去即可。 还可以再repo里加一个README，在程序里加一个说明，一点就打开README的网址，这也不难。 Step 6 - 加入一部分彩蛋好吧，其实这一步是选做的~不过我认为一个程序要更有意思就应该加入一些彩蛋。比如GC Server最近促使我添加“姓名登录”的一个较为重要的原因就是想藏彩蛋。比如你输入某些神奇的名字 够了不泄密了… Step 7 - 完工好的，如果你已经按照前面的步骤顺利完成了，生成exe文件的时候就到了。不出意外的话（这几乎是不可能的），你会看到exe文件已经在项目文件夹里等着你了。当然，如果出现了不能解决的错误，也欢迎你来留言哦~ 感谢阅读","categories":[{"name":"项目","slug":"项目","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/"}],"tags":[{"name":"GC Server","slug":"GC-Server","permalink":"http://code004accepted.github.io/tags/GC-Server/"}]},{"title":"Visual Studio 安装记","slug":"the-installtion-of-visual-studio","date":"2019-05-17T23:19:34.000Z","updated":"2019-05-17T23:19:34.000Z","comments":true,"path":"2019/the-installtion-of-visual-studio/","link":"","permalink":"http://code004accepted.github.io/2019/the-installtion-of-visual-studio/","excerpt":"我初次使用VS是在一年前（VS2017 Enterprise）。为了C++开发，当时选组件时直接下了所有跟Windows和C++有关的，然后15分钟下完，使用一切正常。百度搜了个激活码，就这样一直用了大半年。 最近在GC Server开发过程中，我意识到电脑太卡慢了，一看C盘装了一堆垃圾文件，又懒得手动删，电脑管家也扫不出来，于是找同学（余博文）借了个U深度的盘重装Win10，花了30分钟，现在开机只需10秒。","text":"我初次使用VS是在一年前（VS2017 Enterprise）。为了C++开发，当时选组件时直接下了所有跟Windows和C++有关的，然后15分钟下完，使用一切正常。百度搜了个激活码，就这样一直用了大半年。 最近在GC Server开发过程中，我意识到电脑太卡慢了，一看C盘装了一堆垃圾文件，又懒得手动删，电脑管家也扫不出来，于是找同学（余博文）借了个U深度的盘重装Win10，花了30分钟，现在开机只需10秒。 当然，重装后的第一要务就是把VS装好。不过，好像…在我之前快乐地使用VS2017时（时不时也安装一些更新），我一直不知道微软已经出了VS2019…然后我瞬间想法就是…换2019算了！ 但是下了安装程序选组件的时候，一看，一个C++的标准组件就十几个G，好像比2017大了一倍… 百度一下哪个好，基本都说选2017，因为2019刚出，还没太完善。我想想也是，之前又和2017培养出了感情…于是还是决定装2017。 我是坚决支持正版的，心想我只从微软官网下。左找右找硬是找不到官方的VS2017下载程序。后来无意点到了下载页面，发现底下有个叫“旧版本”的按钮，于是点了然后跳转到登录界面。登录了微软账户后告诉我要关注某个东西，我认为无所谓于是就关注了，出来了下载页面。我点了下载，就下了一个旧版的VS Installer，终于开始下VS2017了~ 然后，花了10分钟下好了，结果提示我无法安装Visual CPP.Redist.14…（我忘了…）我把错误代码一复制，然后贴VS开发者论坛，搜了，有几个显示解决的，但是我都不能…于是我百度继续搜，搜到一位大神的文章，让我百度下载微软官方的安装程序然后替换… 好不容易找到了，趁Installer下完了，还没安装的时候，我偷偷地把两个包替换了，然后终于解决了这个问题！！！ 不过，又告诉我 .NET SDK 和 Win10 SDK 无法安装，我懒得在手动下载了…而且我认为八成会再出现其它类似错误… 我想或许是2017是旧版导致的问题，于是又重下了2019，结果还是出了同样问题，于是想了，算了，不用VS了… （这里插一句，后期还发现官方的VS会占用C盘大量空间，而且卸都卸不掉，只能在C盘里搜索vs和visual studio然后选择几个看得不顺眼的删掉。幸亏Win 10的搜索不分大小写，也支持模糊搜索，不然我到现在还删不完…之前下的VS2017和2019卸完后还占了我C盘大概10个G，我删了后还比下VS之前多了半个G，懒得再找了~） 在前面登录微软账号验证邮箱时，我还看到了百度给我发的提醒邮件，说某个贴吧（在此不透露）有人回复了我的帖子，所以放弃VS后点进去看了一下，处理完消息以后无聊点进网盘，在搜索栏里无聊地输入VS…我没指望有搜索结果，结果告诉我我去年暑假存了一个VS便携包合集，从VC++6.0 VS2008，到VS2017都有，眼睛一亮。作者温馨提示我，VS2017不建议使用，所以我决定下VS2015。点进去使用Proxyee-down，50秒下完1G左右的压缩包（打广告~），速度最高30多M每秒… 终于下好了，我支持正版的心态又来了，又跑去微软官网下载2015…然后安装程序打不开，果断放弃… 开始便携版安装，3分钟装完，所有组件都到位，非常好。除了最后几个无关紧要的注册表好像不知为何没有权限写入（目前对使用没有任何影响）外，安装一切顺利。装好后，和正版一样提示我登录，登录界面没有丝毫问题，都跟原版一模一样。好评！ 终于可以愉快地写代码了，但是我还不满足，VS2015的菜单太少了…我还是习惯用2017，于是卸掉2015便携版（居然把所有占用我C盘的5个G全还回来了，删的干干净净） 然后下了2017的便携包，现在已经安装成功，可以正常使用了。打开后5秒就可以加载出来，也不会像之前一样经常无响应了~支持便携版！:) PS：想要便携包？去百度贴吧自己搜，好像在visualstudio吧里~ 祝好运！","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[{"name":"软件","slug":"软件","permalink":"http://code004accepted.github.io/tags/%E8%BD%AF%E4%BB%B6/"}]},{"title":"关于考试的一首藏头诗","slug":"an-acrostic-about-exams","date":"2019-04-13T21:36:00.000Z","updated":"2019-06-01T23:19:25.000Z","comments":true,"path":"2019/an-acrostic-about-exams/","link":"","permalink":"http://code004accepted.github.io/2019/an-acrostic-about-exams/","excerpt":"在电脑的帮助下写了下面这首小诗：","text":"在电脑的帮助下写了下面这首小诗： 数十年前屈指中，学将心事付东风。 课儿自笑生涯拙，代士谁怜世路穷。 表里何人识姓名，改成千古有馀情。 分明记得前朝事，数点寒鸦一两声。 UPDATE: 既然事情已经过去很久了，就说出来吧 当时学校的一次数学月考（还是周练，记不清了），我们班的四位数学课代表有三位潜入数学办公室，并趁老师睡觉时把他们的答题卡从头到尾修改了一遍，几个人平时都很少到100分的（120满分），那次考试全部考到了117以上，还有一个120。还有，那次考试很难，班上最好的同学也才115，没有“运气”的可能。 事情既然都过去了，就算了吧 对了，上面这首诗阅读的方法是看每7个字的第一个字，这种诗叫做藏头诗，英文是acrostic PS：制作藏头诗/绝句/奇妙诗词的，去这里","categories":[{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"}],"tags":[{"name":"学校","slug":"学校","permalink":"http://code004accepted.github.io/tags/%E5%AD%A6%E6%A0%A1/"},{"name":"数学","slug":"数学","permalink":"http://code004accepted.github.io/tags/%E6%95%B0%E5%AD%A6/"}]},{"title":"GC Server Ver 8.8","slug":"gc-server-ver-8-8","date":"2019-04-08T23:14:10.000Z","updated":"2019-04-08T23:14:10.000Z","comments":true,"path":"2019/gc-server-ver-8-8/","link":"","permalink":"http://code004accepted.github.io/2019/gc-server-ver-8-8/","excerpt":"Ver 8.8于2019年4月8日首发，","text":"Ver 8.8于2019年4月8日首发，所有版本下载链接: https://pan.baidu.com/s/1_wwZtbEhUAxnTdiI0fr4mg 提取码: v8jv 欢迎下载！ 更新说明：增加了积分/评级/任务系统（测试中，目前仅开放两项任务） 欢迎测试，有任何BUG或疑问请至左侧（手机版是上侧）目录中的留言板反馈，谢谢。 PS：准备下次增加检测更新功能，思路是在Github上开一个repo存一个txt文件表示最新版本号，然后更新程序中下载这个txt文件并读取其内容，如果与当前版本不同就提示更新。","categories":[{"name":"项目","slug":"项目","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/"},{"name":"GC Server","slug":"项目/GC-Server","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/GC-Server/"}],"tags":[{"name":"项目发布","slug":"项目发布","permalink":"http://code004accepted.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83/"}]},{"title":"【不再适用】GC Server 用户制度介绍","slug":"gc-server-user-intro","date":"2019-03-30T22:35:32.000Z","updated":"2019-03-30T22:35:32.000Z","comments":true,"path":"2019/gc-server-user-intro/","link":"","permalink":"http://code004accepted.github.io/2019/gc-server-user-intro/","excerpt":"本文对于Alpha 9.0及后续版本已不再适用！新版用户说明请等待Beta版本发布后查看。如有疑问请在本文下方评论。 说明：本文仅对8.7后部分版本及8.8和以后有效 GC Server 用户说明GC Server 的用户包括以下六种： 单次用户 （直接注册） 本机用户 （暂未开通） 测试用户 （直接注册） 普通会员 （联系申请） 个人VIP （提交申请） 管理人员 （提交申请）","text":"本文对于Alpha 9.0及后续版本已不再适用！新版用户说明请等待Beta版本发布后查看。如有疑问请在本文下方评论。 说明：本文仅对8.7后部分版本及8.8和以后有效 GC Server 用户说明GC Server 的用户包括以下六种： 单次用户 （直接注册） 本机用户 （暂未开通） 测试用户 （直接注册） 普通会员 （联系申请） 个人VIP （提交申请） 管理人员 （提交申请） 单次用户如何登录所有下载了正版GC Server的用户都可以在首页点击 快速注册→单次注册 进行单次注册操作。注册后可以使用gsfm的账号和用户设置并确认的一次性密码登录。 用户权限单次注册的账号权限极低，强烈不推荐使用此账号。 有效时间在关闭GC Server程序前对注册的个体程序有效。 本机用户本机用户是在此台电脑上可以永久登录的账号，利用文件存储来实现。功能暂未开通，敬请期待~ 测试用户如何登录全局测试账号：test密码：test 功能测试针对研发中的新功能，可能推出专用测试账号，将会在此博客&amp;GC Coding论坛同步推出，敬请期待~ 用户权限测试账号权限较高，可以浏览最新功能及大部分内容。 有效时间全局测试用户永久有效，功能测试的用户视情况而定。 普通会员如何登录直接点击登录按钮后输入账号密码即可。 用户权限权限极高，几乎可以浏览全部内容。 有效时间在用户被封禁前永久有效。 如何注册可以在留言板向我提出申请或给我发送邮件（gscggame@zoho.com.cn），我会尽快审核并回复。（留言的请务必填上邮件地址，方便联系） 目前暂不开通注册，请至本文最下方附加说明查看，感谢谅解。 个人VIP如何登录直接点击登录按钮后输入账号密码即可。 用户权限权限极高，可以浏览除管理面板外的全部内容。 有效时间在用户被封禁前永久有效。 如何注册对GC Server或GC Coding论坛做出较大贡献的用户会被我主动联系并进行个人VIP注册。 管理人员如何登录特殊方式，不便透露。 用户权限可以浏览全部内容。 有效时间视情况而定。 如何注册可以给我发送邮件进行申请。With great power comes great responsibility. 联系方式请回复此博文或Email我或点击左侧头像查看联系方式。 附加说明目前普通会员暂不开放注册。如果想注册，请帮助我们开发以获取个人VIP账号，感谢谅解。","categories":[{"name":"项目","slug":"项目","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/"},{"name":"GC Server","slug":"项目/GC-Server","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/GC-Server/"}],"tags":[{"name":"项目文档","slug":"项目文档","permalink":"http://code004accepted.github.io/tags/%E9%A1%B9%E7%9B%AE%E6%96%87%E6%A1%A3/"}]},{"title":"图论画图神器——CS Academy","slug":"graph-artifact-cs-academy","date":"2019-03-10T09:21:32.000Z","updated":"2019-03-10T09:21:32.000Z","comments":true,"path":"2019/graph-artifact-cs-academy/","link":"","permalink":"http://code004accepted.github.io/2019/graph-artifact-cs-academy/","excerpt":"转载自：https://www.luogu.org/blog/ouuan/cs-academy 原作者：ouuan 简介CS Academy是一个在线算法竞赛/算法学习网站，而其中的图论画图功能非常实用。它既可以帮助我们理解图论题的题意，对样例进行模拟，又有一定的娱乐性。","text":"转载自：https://www.luogu.org/blog/ouuan/cs-academy 原作者：ouuan 简介CS Academy是一个在线算法竞赛/算法学习网站，而其中的图论画图功能非常实用。它既可以帮助我们理解图论题的题意，对样例进行模拟，又有一定的娱乐性。 初阶使用网站： https://csacademy.com/app/graph_editor/ 左边是数据输入区，右边则是图像。 数据输入接受三种格式： u，创建一个编号为 uu 的点u v，创建一条边 (u,v)(u,v)（如果 uu 和/或 vv 还没有创建，则会创建）u v w，创建一条边权为 ww 的边 (u,v)(u,v) 这三种格式是可以混用的。你甚至可以输入字符串而不是数字。 数据输入区上方可以更改图是有向还是无向。 图像的上方有三个按钮，可以转换点标号的方式。事实上第三个按钮是没有作用的，而前两个按钮分别为：编号从 00 至 n-1n−1；编号为从 11 至 nn。这两个操作都会改变数据输入区的内容，若要撤销修改可以在数据输入区内按Ctrl+Z. 进阶使用注意到右端上方还有几个按钮。下面将分别进行讲解： Force在这个模式下，节点之间有“力”的作用，因而会乱动（在节点较多时、拖拽节点时尤为明显）。不推荐在做题时使用Force模式，如果目的是看清这个图、在图上进行模拟，在其它模式下将图摆成一个好看的形状将会看得更加清楚。 EditDraw、Edit、Delete其实都是编辑模式。在编辑模式下，节点是固定的（除法你自己用鼠标拖拽节点），不会乱动。在Draw模式下，你可以单击空白处来添加一个节点，依次单击两个节点来添加一条边。在Edit模式下，你可以单击一个节点来修改标签，单击一条边来修改边权。在Delete模式下，你可以单击一个节点来删除该节点，单击一条边来删除这条边。 ConfigConfig 面板大概长这样：其中：Node radius：每个节点的大小。Edge ideal length：之前说过，在Force模式中，节点之间是有“力”的，而Edge ideal length就是一条边上的两个点之间的“吸引程度”，两点间距离大于这个值便会产生“引力”，否则会产生“斥力”，就像分子之间一样。下面的三个选项分别是节点的填充色、节点的外圈和标签颜色、边的颜色。最后是三个命令：Fix all nodes/Unfix all nodes：固定/解除固定节点。固定的话节点就不会乱动，否则就是Force模式。Arrange as tree：将图显示为这张图的dfs树并固定节点。 例： 娱乐功能不知道大家有没有看过膜你抄，膜你抄中的球球乱滚的画面就是在这里制作的： 只需在左边的Graph Data中输入1-200即可~ 效果截图： 还有更多玩法：","categories":[{"name":"收藏","slug":"收藏","permalink":"http://code004accepted.github.io/categories/%E6%94%B6%E8%97%8F/"}],"tags":[{"name":"娱乐","slug":"娱乐","permalink":"http://code004accepted.github.io/tags/%E5%A8%B1%E4%B9%90/"},{"name":"图论","slug":"图论","permalink":"http://code004accepted.github.io/tags/%E5%9B%BE%E8%AE%BA/"},{"name":"算法","slug":"算法","permalink":"http://code004accepted.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"GC Server Ver 8.7 & 2019新年专版","slug":"gc-server-ver-8-7","date":"2019-02-04T23:22:00.000Z","updated":"2019-02-04T23:22:00.000Z","comments":true,"path":"2019/gc-server-ver-8-7/","link":"","permalink":"http://code004accepted.github.io/2019/gc-server-ver-8-7/","excerpt":"Ver 8.7于2019年2月4日首发 2019特别版于2019年2月3日首发","text":"Ver 8.7于2019年2月4日首发 2019特别版于2019年2月3日首发 Ver在原版本的基础上加入图片，简化了用户行为，预计gscg-box（工具箱）会尽快制作完成。 所有版本下载链接: https://pan.baidu.com/s/1_wwZtbEhUAxnTdiI0fr4mg 提取码: v8jv","categories":[{"name":"项目","slug":"项目","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/"},{"name":"GC Server","slug":"项目/GC-Server","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/GC-Server/"}],"tags":[{"name":"项目发布","slug":"项目发布","permalink":"http://code004accepted.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83/"}]},{"title":"GC Server Ver 8.6","slug":"gc-server-ver-8-6","date":"2019-01-15T00:00:00.000Z","updated":"2019-01-15T00:00:00.000Z","comments":true,"path":"2019/gc-server-ver-8-6/","link":"","permalink":"http://code004accepted.github.io/2019/gc-server-ver-8-6/","excerpt":"自己搞的一个小项目 GC-Server去年（2018）9月出了8.6版本 然后前几天又回来更新了。","text":"自己搞的一个小项目 GC-Server去年（2018）9月出了8.6版本 然后前几天又回来更新了。 所有版本下载链接: https://pan.baidu.com/s/1_wwZtbEhUAxnTdiI0fr4mg 提取码: v8jv 如果分享被删了请评论告知我，谢谢。 还有最近为什么没更新 是因为在我NOIP失败后（90多分），基于我校内情况不是特别好，所以我和我父母商量决定暂停编程。现在我也在挤时间搞项目。希望大家珍惜学习编程的机会，加油！","categories":[{"name":"项目","slug":"项目","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/"},{"name":"GC Server","slug":"项目/GC-Server","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/GC-Server/"}],"tags":[{"name":"项目发布","slug":"项目发布","permalink":"http://code004accepted.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83/"}]}],"categories":[{"name":"项目","slug":"项目","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/"},{"name":"随记","slug":"随记","permalink":"http://code004accepted.github.io/categories/%E9%9A%8F%E8%AE%B0/"},{"name":"公告","slug":"公告","permalink":"http://code004accepted.github.io/categories/%E5%85%AC%E5%91%8A/"},{"name":"教程","slug":"教程","permalink":"http://code004accepted.github.io/categories/%E6%95%99%E7%A8%8B/"},{"name":"GC Server","slug":"项目/GC-Server","permalink":"http://code004accepted.github.io/categories/%E9%A1%B9%E7%9B%AE/GC-Server/"},{"name":"游戏","slug":"游戏","permalink":"http://code004accepted.github.io/categories/%E6%B8%B8%E6%88%8F/"},{"name":"Minecraft","slug":"游戏/Minecraft","permalink":"http://code004accepted.github.io/categories/%E6%B8%B8%E6%88%8F/Minecraft/"},{"name":"收藏","slug":"收藏","permalink":"http://code004accepted.github.io/categories/%E6%94%B6%E8%97%8F/"}],"tags":[{"name":"纪念","slug":"纪念","permalink":"http://code004accepted.github.io/tags/%E7%BA%AA%E5%BF%B5/"},{"name":"开发工作","slug":"开发工作","permalink":"http://code004accepted.github.io/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E4%BD%9C/"},{"name":"GC Server","slug":"GC-Server","permalink":"http://code004accepted.github.io/tags/GC-Server/"},{"name":"非请勿入","slug":"非请勿入","permalink":"http://code004accepted.github.io/tags/%E9%9D%9E%E8%AF%B7%E5%8B%BF%E5%85%A5/"},{"name":"搭建","slug":"搭建","permalink":"http://code004accepted.github.io/tags/%E6%90%AD%E5%BB%BA/"},{"name":"系统","slug":"系统","permalink":"http://code004accepted.github.io/tags/%E7%B3%BB%E7%BB%9F/"},{"name":"学校","slug":"学校","permalink":"http://code004accepted.github.io/tags/%E5%AD%A6%E6%A0%A1/"},{"name":"英语","slug":"英语","permalink":"http://code004accepted.github.io/tags/%E8%8B%B1%E8%AF%AD/"},{"name":"博客","slug":"博客","permalink":"http://code004accepted.github.io/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"项目文档","slug":"项目文档","permalink":"http://code004accepted.github.io/tags/%E9%A1%B9%E7%9B%AE%E6%96%87%E6%A1%A3/"},{"name":"项目发布","slug":"项目发布","permalink":"http://code004accepted.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83/"},{"name":"娱乐","slug":"娱乐","permalink":"http://code004accepted.github.io/tags/%E5%A8%B1%E4%B9%90/"},{"name":"基础知识","slug":"基础知识","permalink":"http://code004accepted.github.io/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"},{"name":"音乐","slug":"音乐","permalink":"http://code004accepted.github.io/tags/%E9%9F%B3%E4%B9%90/"},{"name":"软件","slug":"软件","permalink":"http://code004accepted.github.io/tags/%E8%BD%AF%E4%BB%B6/"},{"name":"数学","slug":"数学","permalink":"http://code004accepted.github.io/tags/%E6%95%B0%E5%AD%A6/"},{"name":"图论","slug":"图论","permalink":"http://code004accepted.github.io/tags/%E5%9B%BE%E8%AE%BA/"},{"name":"算法","slug":"算法","permalink":"http://code004accepted.github.io/tags/%E7%AE%97%E6%B3%95/"}]}